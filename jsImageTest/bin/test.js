// Generated by Haxe 4.3.0-rc.1+
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.now = function() {
	return Date.now();
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var Test = function() {
	this.canvasSetup = new htmlHelper_canvas_CanvasSetup();
	haxe_Log.trace("Doudecimal example on Canvas",{ fileName : "Test.hx", lineNumber : 13, className : "Test", methodName : "new"});
	var g = this.canvasSetup.surface;
	var this1 = new Uint8Array(4);
	var this2 = new doudecimal_Image8Struct(1,1,this1);
	var p = this2;
	var d_uint;
	var d_doudecimal;
	var str = "BBAA9988";
	if(str == null) {
		str = "0";
	}
	if(str == null) {
		str = "0";
	}
	if(str.length > 8) {
		str = "0";
	}
	var _g = 0;
	var _g1 = 8 - str.length;
	while(_g < _g1) {
		var i = _g++;
		str += "0";
	}
	var doudecimal = str;
	if(doudecimal == null) {
		doudecimal = "0";
	}
	if(doudecimal == "" || doudecimal == "0") {
		d_uint = 0;
		d_doudecimal = "0";
	} else {
		d_doudecimal = doudecimal_format_doudecimalString_Writer_toStr(doudecimal);
		d_uint = doudecimal_format_doudecimalString_Reader_toUInt_(d_doudecimal);
	}
	haxe_Log.trace(d_uint == null ? "null" : Std.string(UInt.toFloat(d_uint)),{ fileName : "Test.hx", lineNumber : 20, className : "Test", methodName : "new"});
	haxe_Log.trace(d_uint == null ? "null" : Std.string(UInt.toFloat(d_uint)),{ fileName : "Test.hx", lineNumber : 23, className : "Test", methodName : "new"});
	var decimal = d_uint >>> 32 & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	var tmp = out.doudecimal + " ";
	var decimal = d_uint >>> 16 & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	var tmp1 = tmp + out.doudecimal + " ";
	var decimal = d_uint >>> 8 & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	var tmp = tmp1 + out.doudecimal + " ";
	var decimal = d_uint >>> 8 & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	haxe_Log.trace(tmp + out.doudecimal,{ fileName : "Test.hx", lineNumber : 24, className : "Test", methodName : "new"});
	haxe_Log.trace(d_uint == null ? "null" : Std.string(UInt.toFloat(d_uint)),{ fileName : "Test.hx", lineNumber : 28, className : "Test", methodName : "new"});
	var decimal = d_uint >>> 32 & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	var tmp = StringTools.hex(out.uint,2) + " ";
	var decimal = d_uint >>> 16 & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	var tmp1 = tmp + StringTools.hex(out.uint,2) + " ";
	var decimal = d_uint >>> 8 & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	var tmp = tmp1 + StringTools.hex(out.uint,2) + " ";
	var decimal = d_uint & 255;
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(decimal);
	out.uint = decimal;
	haxe_Log.trace(tmp + StringTools.hex(out.uint,2),{ fileName : "Test.hx", lineNumber : 29, className : "Test", methodName : "new"});
	haxe_Log.trace(StringTools.hex(d_uint >>> 32 & 255,2) + StringTools.hex(d_uint >>> 16 & 255,2) + StringTools.hex(d_uint >>> 8 & 255,2) + StringTools.hex(d_uint & 255,2),{ fileName : "Test.hx", lineNumber : 35, className : "Test", methodName : "new"});
	var small = 0.006993006993006993;
	var x = 0. | 0;
	var y = 0. | 0;
	var pos = (p.useVirtualPos ? (y - p.virtualY) * p.width + x - p.virtualX | 0 : y * p.width + x | 0) * 4 | 0;
	var no1 = 0;
	var s;
	if(d_doudecimal.length >= 0) {
		var p1 = HxOverrides.substr(d_doudecimal,no1 * 2 | 0,2);
		s = new doudecimal_Doudecimal_$(p1);
	} else {
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		out.uint = 0;
		out.doudecimal = "0";
		s = out;
	}
	var i = s.uint;
	if((i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143)) < 1. - small && p.transparent) {
		var c0 = p.image[pos];
		var c1 = p.image[pos + 1];
		var c2 = p.image[pos + 1];
		var c3 = p.image[pos + 2];
		var fromRGB = doudecimal_Doudecimal_$Color.fromChannels(c0,c1,c2,c3);
		haxe_Log.trace("fromRGB " + (fromRGB == null ? "null" : Std.string(UInt.toFloat(fromRGB))),{ fileName : "../src/doudecimal/Doudecimal_Color.hx", lineNumber : 218, className : "doudecimal._Doudecimal_Color.Doudecimal_Color_Impl_", methodName : "fromChannelEncodeHex"});
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(fromRGB);
		out.uint = fromRGB;
		var d = out;
		var s = "";
		var _g = 0;
		var _g1 = 8 - d.doudecimal.length;
		while(_g < _g1) {
			var i = _g++;
			s += "0";
		}
		s += d.doudecimal;
		d.doudecimal = s;
		haxe_Log.trace("dd " + Std.string(d),{ fileName : "../src/doudecimal/Doudecimal_Color.hx", lineNumber : 221, className : "doudecimal._Doudecimal_Color.Doudecimal_Color_Impl_", methodName : "fromChannelEncodeHex"});
		var currColor = d;
		var no1 = 0;
		var s;
		if(currColor.doudecimal.length >= 0) {
			var p1 = HxOverrides.substr(currColor.doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var a1 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var no1 = 1;
		var s;
		if(currColor.doudecimal.length >= 2) {
			var p1 = HxOverrides.substr(currColor.doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var r1 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var no1 = 2;
		var s;
		if(currColor.doudecimal.length >= 4) {
			var p1 = HxOverrides.substr(currColor.doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var g1 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var no1 = 3;
		var s;
		if(currColor.doudecimal.length >= 6) {
			var p1 = HxOverrides.substr(currColor.doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var b1 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var no1 = 0;
		var s;
		if(d_doudecimal.length >= 0) {
			var p1 = HxOverrides.substr(d_doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var a2 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var no1 = 1;
		var s;
		if(d_doudecimal.length >= 2) {
			var p1 = HxOverrides.substr(d_doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var r2 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var no1 = 2;
		var s;
		if(d_doudecimal.length >= 4) {
			var p1 = HxOverrides.substr(d_doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var g2 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var no1 = 3;
		var s;
		if(d_doudecimal.length >= 6) {
			var p1 = HxOverrides.substr(d_doudecimal,no1 * 2 | 0,2);
			s = new doudecimal_Doudecimal_$(p1);
		} else {
			var out = Object.create(doudecimal_Doudecimal_$.prototype);
			out.uint = 0;
			out.doudecimal = "0";
			s = out;
		}
		var i = s.uint;
		var b2 = i == 0 ? 0. : UInt.toFloat(i) / UInt.toFloat(143);
		var a3 = a1 * (1. - a2);
		var r = r1 * a3 + r2 * a2;
		var g = g1 * a3 + g2 * a2;
		var b = b1 * a3 + b2 * a2;
		var a = a3 + a2;
		var aD = Math.round(a * 143);
		var rD = Math.round(r * 143);
		var gD = Math.round(g * 143);
		var bD = Math.round(b * 143);
		var col = aD << 18 | rD << 12 | gD << 6 | bD;
		haxe_Log.trace("set ARGB " + aD,{ fileName : "../src/doudecimal/Doudecimal_Color.hx", lineNumber : 29, className : "doudecimal._Doudecimal_Color.Doudecimal_Color_Impl_", methodName : "setARGB"});
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(col);
		out.uint = col;
		var temp = out;
		currColor.doudecimal = temp.doudecimal;
		currColor.uint = col;
		if(currColor.doudecimal.length != 8) {
			var s = "";
			var _g = 0;
			var _g1 = 8 - currColor.doudecimal.length;
			while(_g < _g1) {
				var i = _g++;
				s += "0";
			}
			s += currColor.doudecimal;
			currColor.doudecimal = s;
		}
		p.image[pos] = currColor.uint >>> 32 & 255;
		p.image[pos + 1] = currColor.uint >>> 16 & 255;
		p.image[pos + 2] = currColor.uint >>> 8 & 255;
		p.image[pos + 3] = currColor.uint & 255;
	} else {
		p.image[pos] = d_uint >>> 32 & 255;
		p.image[pos + 1] = d_uint >>> 16 & 255;
		p.image[pos + 2] = d_uint >>> 8 & 255;
		p.image[pos + 3] = d_uint & 255;
	}
	var x = 0. | 0;
	var y = 0. | 0;
	var pos = (p.useVirtualPos ? (y - p.virtualY) * p.width + x - p.virtualX | 0 : y * p.width + x | 0) * 4 | 0;
	haxe_Log.trace(StringTools.hex(p.image[pos],2) + StringTools.hex(p.image[pos + 1],2) + StringTools.hex(p.image[pos + 2],2) + StringTools.hex(p.image[pos + 3],2),{ fileName : "Test.hx", lineNumber : 37, className : "Test", methodName : "new"});
	var x = 0. | 0;
	var y = 0. | 0;
	var pos = (p.useVirtualPos ? (y - p.virtualY) * p.width + x - p.virtualX | 0 : y * p.width + x | 0) * 4 | 0;
	var fromRGB = doudecimal_Doudecimal_$Color.fromChannels(p.image[pos],p.image[pos + 1],p.image[pos + 2],p.image[pos + 3]);
	haxe_Log.trace("fromRGB " + (fromRGB == null ? "null" : Std.string(UInt.toFloat(fromRGB))),{ fileName : "../src/doudecimal/Doudecimal_Color.hx", lineNumber : 218, className : "doudecimal._Doudecimal_Color.Doudecimal_Color_Impl_", methodName : "fromChannelEncodeHex"});
	var out = Object.create(doudecimal_Doudecimal_$.prototype);
	out.doudecimal = doudecimal_format_doudecimalString_Writer_fromUInt_(fromRGB);
	out.uint = fromRGB;
	var d = out;
	var s = "";
	var _g = 0;
	var _g1 = 8 - d.doudecimal.length;
	while(_g < _g1) {
		var i = _g++;
		s += "0";
	}
	s += d.doudecimal;
	d.doudecimal = s;
	haxe_Log.trace("dd " + Std.string(d),{ fileName : "../src/doudecimal/Doudecimal_Color.hx", lineNumber : 221, className : "doudecimal._Doudecimal_Color.Doudecimal_Color_Impl_", methodName : "fromChannelEncodeHex"});
	var d1 = d;
	var d2 = d1;
	haxe_Log.trace((d_uint == null ? "null" : Std.string(UInt.toFloat(d_uint))) + " " + d_doudecimal + " " + (d2.uint == null ? "null" : Std.string(UInt.toFloat(d2.uint))) + " " + d2.doudecimal,{ fileName : "Test.hx", lineNumber : 39, className : "Test", methodName : "new"});
};
Test.__name__ = true;
function Test_main() {
	new Test();
}
var UInt = {};
UInt.gt = function(a,b) {
	var aNeg = a < 0;
	var bNeg = b < 0;
	if(aNeg != bNeg) {
		return aNeg;
	} else {
		return a > b;
	}
};
UInt.toFloat = function(this1) {
	var int = this1;
	if(int < 0) {
		return 4294967296.0 + int;
	} else {
		return int + 0.0;
	}
};
var doudecimal_Doudecimal_$ = function(doudecimal) {
	if(doudecimal == null) {
		doudecimal = "0";
	}
	if(doudecimal == "" || doudecimal == "0") {
		this.uint = 0;
		this.doudecimal = "0";
	} else {
		this.doudecimal = doudecimal_format_doudecimalString_Writer_toStr(doudecimal);
		this.uint = doudecimal_format_doudecimalString_Reader_toUInt_(this.doudecimal);
	}
};
doudecimal_Doudecimal_$.__name__ = true;
doudecimal_Doudecimal_$.prototype = {
	toString: function() {
		return this.doudecimal;
	}
};
var doudecimal_Doudecimal_$Color = {};
doudecimal_Doudecimal_$Color.fromChannels = function(ch0,ch1,ch2,ch3) {
	return ch0 << 32 | ch1 << 16 | ch2 << 8 | ch3;
};
var doudecimal_Image8Struct = function(width,height,image) {
	this.useVirtualPos = false;
	this.virtualY = 0;
	this.virtualX = 0;
	this.transparent = false;
	this.width = width;
	this.height = height;
	this.image = image;
	this.transparent = false;
};
doudecimal_Image8Struct.__name__ = true;
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
function doudecimal_format_doudecimalString_Reader_$toUInt_toUInt(doudecimal) {
	var len = doudecimal.length;
	var n = len - 1;
	var multi;
	var out = 0.;
	var no = 0.;
	var dozit = "";
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		multi = Math.pow(12,n);
		dozit = doudecimal.charAt(i);
		var no = dozit == "A" ? 10 : dozit == "B" ? 11 : Std.parseInt(dozit);
		out += multi * no;
		--n;
	}
	return out | 0;
}
function doudecimal_format_doudecimalString_Writer_$fromUInt_getBigBase12(no) {
	var out = "";
	var large = UInt.gt(no,16777215);
	if(large) {
		var f = UInt.toFloat(no);
		var topf = f / 144 / 144;
		var bottomU = Math.round((topf - Math.round(topf)) * 144 * 144);
		var str = "";
		doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp = bottomU;
		var v_0 = doudecimal_format_doudecimalString_Powers_v8;
		var v_1 = doudecimal_format_doudecimalString_Powers_v7;
		var v_2 = doudecimal_format_doudecimalString_Powers_v6;
		var v_3 = doudecimal_format_doudecimalString_Powers_v5;
		var v_4 = doudecimal_format_doudecimalString_Powers_v4;
		var v_5 = doudecimal_format_doudecimalString_Powers_v3;
		var v_6 = doudecimal_format_doudecimalString_Powers_v2;
		var v_7 = doudecimal_format_doudecimalString_Powers_v1;
		var v_8 = doudecimal_format_doudecimalString_Powers_v0;
		var vx = v_0;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_1;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_2;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_3;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_4;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_5;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_6;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_7;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_8;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var bottomS = str;
		var j = 0;
		var _g = 0;
		var _g1 = bottomS.length;
		while(_g < _g1) {
			var i = _g++;
			if(bottomS.charAt(i) != "0") {
				j = i;
				break;
			}
		}
		bottomS = HxOverrides.substr(bottomS,j,null);
		var topU = topf | 0;
		var str = "";
		doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp = topU;
		var v_0 = doudecimal_format_doudecimalString_Powers_v8;
		var v_1 = doudecimal_format_doudecimalString_Powers_v7;
		var v_2 = doudecimal_format_doudecimalString_Powers_v6;
		var v_3 = doudecimal_format_doudecimalString_Powers_v5;
		var v_4 = doudecimal_format_doudecimalString_Powers_v4;
		var v_5 = doudecimal_format_doudecimalString_Powers_v3;
		var v_6 = doudecimal_format_doudecimalString_Powers_v2;
		var v_7 = doudecimal_format_doudecimalString_Powers_v1;
		var v_8 = doudecimal_format_doudecimalString_Powers_v0;
		var vx = v_0;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_1;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_2;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_3;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_4;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_5;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_6;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_7;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_8;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var topS = str;
		var j = 0;
		var _g = 0;
		var _g1 = topS.length;
		while(_g < _g1) {
			var i = _g++;
			if(topS.charAt(i) != "0") {
				j = i;
				break;
			}
		}
		topS = HxOverrides.substr(topS,j,null);
		return topS + bottomS;
	} else {
		var str = "";
		doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp = no;
		var v_0 = doudecimal_format_doudecimalString_Powers_v8;
		var v_1 = doudecimal_format_doudecimalString_Powers_v7;
		var v_2 = doudecimal_format_doudecimalString_Powers_v6;
		var v_3 = doudecimal_format_doudecimalString_Powers_v5;
		var v_4 = doudecimal_format_doudecimalString_Powers_v4;
		var v_5 = doudecimal_format_doudecimalString_Powers_v3;
		var v_6 = doudecimal_format_doudecimalString_Powers_v2;
		var v_7 = doudecimal_format_doudecimalString_Powers_v1;
		var v_8 = doudecimal_format_doudecimalString_Powers_v0;
		var vx = v_0;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_1;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_2;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_3;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_4;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_5;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_6;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_7;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var vx = v_8;
		var s = str;
		var o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			var tt = doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp - vx;
			if(tt >= 0) {
				doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp -= vx;
				++o;
			} else {
				s += o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				break;
			}
		}
		str = s;
		var allS = str;
		var j = 0;
		var _g = 0;
		var _g1 = allS.length;
		while(_g < _g1) {
			var i = _g++;
			if(allS.charAt(i) != "0") {
				j = i;
				break;
			}
		}
		allS = HxOverrides.substr(allS,j,null);
		return allS;
	}
}
var doudecimal_format_doudecimalString_Writer_$fromUInt_targTemp = null;
function doudecimal_format_doudecimalString_Writer_$fromStr_checkStr(s) {
	var len = s.length;
	var b_b = "";
	var no = 0;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		no = s.charCodeAt(i);
		switch(no) {
		case 35:
			b_b += "A";
			break;
		case 42:
			b_b += "B";
			break;
		case 45:
			if(i == 0) {
				b_b += "-";
			} else {
				throw haxe_Exception.thrown("invalid Doudecimal");
			}
			break;
		case 48:
			b_b += "0";
			break;
		case 49:
			b_b += "1";
			break;
		case 50:
			b_b += "2";
			break;
		case 51:
			b_b += "3";
			break;
		case 52:
			b_b += "4";
			break;
		case 53:
			b_b += "5";
			break;
		case 54:
			b_b += "6";
			break;
		case 55:
			b_b += "7";
			break;
		case 56:
			b_b += "8";
			break;
		case 57:
			b_b += "9";
			break;
		case 59:
			b_b += ";";
			break;
		case 65:
			b_b += "A";
			break;
		case 66:
			b_b += "B";
			break;
		case 69:
			b_b += "B";
			break;
		case 84:
			b_b += "A";
			break;
		case 88:
			b_b += "A";
			break;
		case 90:
			b_b += "B";
			break;
		case 97:
			b_b += "A";
			break;
		case 98:
			b_b += "B";
			break;
		case 102:
			b_b += "A";
			break;
		case 116:
			b_b += "A";
			break;
		case 122:
			b_b += "B";
			break;
		case 8586:
			b_b += "A";
			break;
		case 8587:
			b_b += "B";
			break;
		default:
			throw haxe_Exception.thrown("invalid Doudecimal");
		}
	}
	return b_b;
}
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	get_native: function() {
		return this.__nativeException;
	}
});
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v = _g1[_g];
			++_g;
			str += ", " + Std.string(v);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var htmlHelper_canvas_CanvasSetup = function() {
	this.divertTrace = new htmlHelper_tools_DivertTrace();
	var e = null;
	var this1;
	if(e == null) {
		var canvas = window.document.createElement("canvas");
		var dom = canvas;
		var style = dom.style;
		style.paddingLeft = "0px";
		style.paddingTop = "0px";
		style.left = "0px";
		style.top = "0px";
		style.position = "absolute";
		this1 = canvas;
	} else {
		this1 = e;
	}
	var canvas = this1;
	canvas.width = 1024;
	canvas.height = 768;
	var dom = canvas;
	var style = dom.style;
	style.background = "black";
	window.document.body.appendChild(canvas);
	var this1 = new htmlHelper_canvas_CanvasPlus(canvas.getContext("2d",null),10,10);
	this.surface = this1;
	var factor = 4.;
	this.overSampleCanvas(canvas,this.surface.me,factor);
};
htmlHelper_canvas_CanvasSetup.__name__ = true;
htmlHelper_canvas_CanvasSetup.prototype = {
	overSampleCanvas: function(canvas,ctx,factor) {
		var width = canvas.width;
		var height = canvas.height;
		canvas.width = 0 | (width * factor | 0);
		canvas.height = 0 | (height * factor | 0);
		canvas.style.width = width + "px";
		canvas.style.height = height + "px";
		ctx.scale(factor,factor);
	}
};
var htmlHelper_canvas_CanvasPlus = function(me,x,y) {
	if(y == null) {
		y = 0;
	}
	if(x == null) {
		x = 0;
	}
	this.y = 0.;
	this.x = 0.;
	this.x = x;
	this.y = y;
	this.me = me;
};
htmlHelper_canvas_CanvasPlus.__name__ = true;
var htmlHelper_tools_DivertTrace = function(left,d) {
	if(left == null) {
		left = 610;
	}
	this.textStyle1 = "<span style=\"font-size:14px; color:Grey\">";
	this.textStyle0 = "<span style=\"font-size:12px; color:Silver\">";
	this.traceString = "";
	this.divertTrace(left,d);
};
htmlHelper_tools_DivertTrace.__name__ = true;
htmlHelper_tools_DivertTrace.prototype = {
	divertTrace: function(left,d) {
		if(d == null) {
			var doc = window.document;
			this.traceDiv = doc.createElement("div");
			doc.body.appendChild(this.traceDiv);
			var dom = this.traceDiv;
			var style = dom.style;
			style.position = "absolute";
			style.top = "0px";
			style.left = (left == null ? "null" : "" + left) + "px";
			style.height = "500px";
			style.width = "500px";
			style.zIndex = "99";
			style.overflow = "auto";
		} else {
			this.traceDiv = d;
		}
		haxe_Log.trace = $bind(this,this.myTrace);
	}
	,myTrace: function(v,inf) {
		if(Std.string(v) == "") {
			return;
		}
		this.traceString += this.textStyle0 + inf.className + "." + inf.methodName + " ( " + (inf.lineNumber == null ? "null" : "" + inf.lineNumber) + " )" + "</span>" + "<br> - " + this.textStyle1 + Std.string(v) + "</span>" + "<br>";
		this.traceDiv.innerHTML = this.traceString;
	}
};
var $_;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
$global.$haxeUID |= 0;
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
var doudecimal_format_doudecimalString_Powers_v8 = 429981696;
var doudecimal_format_doudecimalString_Powers_v7 = 35831808;
var doudecimal_format_doudecimalString_Powers_v6 = 2985984;
var doudecimal_format_doudecimalString_Powers_v5 = 248832;
var doudecimal_format_doudecimalString_Powers_v4 = 20736;
var doudecimal_format_doudecimalString_Powers_v3 = 1728;
var doudecimal_format_doudecimalString_Powers_v2 = 144;
var doudecimal_format_doudecimalString_Powers_v1 = 12;
var doudecimal_format_doudecimalString_Powers_v0 = 1;
var doudecimal_format_doudecimalString_Reader_toUInt_ = doudecimal_format_doudecimalString_Reader_$toUInt_toUInt;
var doudecimal_format_doudecimalString_Writer_fromUInt_ = doudecimal_format_doudecimalString_Writer_$fromUInt_getBigBase12;
var doudecimal_format_doudecimalString_Writer_toStr = doudecimal_format_doudecimalString_Writer_$fromStr_checkStr;
Test_main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
