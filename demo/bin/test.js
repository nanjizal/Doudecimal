// Generated by Haxe 4.3.0-rc.1+
(function ($global) { "use strict";
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.now = function() {
	return Date.now();
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x);
	if(isNaN(v)) {
		return null;
	}
	return v;
};
function Test_main() {
	console.log("Test.hx:6:","test");
	var dd = new doudecimal_Doudecimal_$("2↊↋");
	console.log("Test.hx:10:",dd);
	var len = dd.doudecimal.length;
	var no;
	var b_b = "";
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		no = dd.doudecimal.charCodeAt(i);
		var x;
		switch(no) {
		case 65:
			x = "↊";
			break;
		case 66:
			x = "↋";
			break;
		default:
			x = String.fromCodePoint(no);
		}
		b_b += Std.string(x);
	}
	console.log("Test.hx:11:",b_b);
	var v1 = -1;
	var tmp;
	if(v1 == null) {
		tmp = "null";
	} else {
		var v = v1;
		var tens = v;
		var negative = false;
		if(v <= 0) {
			tens = -v;
			negative = true;
		}
		var b = "";
		var targ = tens;
		var v10 = Math.pow(12,10) | 0;
		var v9 = Math.pow(12,9) | 0;
		var v8 = Math.pow(12,8) | 0;
		var v7 = Math.pow(12,7) | 0;
		var v6 = Math.pow(12,6) | 0;
		var v5 = Math.pow(12,5) | 0;
		var v4 = Math.pow(12,4) | 0;
		var v3 = Math.pow(12,3) | 0;
		var v2 = Math.pow(12,2) | 0;
		var v11 = 12;
		var s = "";
		var o = 0;
		var n = "";
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v10 >= 0) {
				targ -= v10;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v9 >= 0) {
				targ -= v9;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v8 >= 0) {
				targ -= v8;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v7 >= 0) {
				targ -= v7;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v6 >= 0) {
				targ -= v6;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v5 >= 0) {
				targ -= v5;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v4 >= 0) {
				targ -= v4;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v3 >= 0) {
				targ -= v3;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v2 >= 0) {
				targ -= v2;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v11 >= 0) {
				targ -= v11;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - 1 >= 0) {
				--targ;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		var so = "";
		var j = 0;
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			if(s.charAt(i) != "0") {
				j = i;
				break;
			}
		}
		so = HxOverrides.substr(s,j,null);
		b = so;
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		if(negative) {
			out.doudecimal = "-" + b;
		} else {
			out.doudecimal = b;
		}
		out.int = v;
		var dd = out;
		tmp = dd.doudecimal;
	}
	console.log("Test.hx:13:",tmp);
	var len = "2A4".length;
	var b_b = "";
	var no = 0;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		no = "2A4".charCodeAt(i);
		switch(no) {
		case 35:
			b_b += Std.string("A");
			break;
		case 42:
			b_b += Std.string("B");
			break;
		case 45:
			if(i == 0) {
				b_b += Std.string("-");
			} else {
				throw haxe_Exception.thrown("invalid Doudecimal");
			}
			break;
		case 48:
			b_b += Std.string("0");
			break;
		case 49:
			b_b += Std.string("1");
			break;
		case 50:
			b_b += Std.string("2");
			break;
		case 51:
			b_b += Std.string("3");
			break;
		case 52:
			b_b += Std.string("4");
			break;
		case 53:
			b_b += Std.string("5");
			break;
		case 54:
			b_b += Std.string("6");
			break;
		case 55:
			b_b += Std.string("7");
			break;
		case 56:
			b_b += Std.string("8");
			break;
		case 57:
			b_b += Std.string("9");
			break;
		case 59:
			b_b += Std.string(";");
			break;
		case 65:
			b_b += Std.string("A");
			break;
		case 66:
			b_b += Std.string("B");
			break;
		case 69:
			b_b += Std.string("B");
			break;
		case 84:
			b_b += Std.string("A");
			break;
		case 88:
			b_b += Std.string("A");
			break;
		case 90:
			b_b += Std.string("B");
			break;
		case 97:
			b_b += Std.string("A");
			break;
		case 98:
			b_b += Std.string("B");
			break;
		case 102:
			b_b += Std.string("A");
			break;
		case 116:
			b_b += Std.string("A");
			break;
		case 122:
			b_b += Std.string("B");
			break;
		case 8586:
			b_b += Std.string("A");
			break;
		case 8587:
			b_b += Std.string("B");
			break;
		default:
			throw haxe_Exception.thrown("invalid Doudecimal");
		}
	}
	var dd_doudecimal = b_b;
	var len = dd_doudecimal.length;
	var n = len - 1;
	var multi;
	var out = 0.;
	var dozit = "";
	var negative = false;
	if(dd_doudecimal.charAt(0) == "-") {
		dd_doudecimal = HxOverrides.substr(dd_doudecimal,1,null);
		len = dd_doudecimal.length;
		negative = true;
	}
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		multi = Math.pow(12,n);
		dozit = dd_doudecimal.charAt(i);
		var no = dozit == "A" ? 10 : dozit == "B" ? 11 : Std.parseInt(dozit);
		out += multi * no;
		--n;
	}
	var dd_int = negative ? -(out | 0) : out | 0;
	var v2 = dd_int;
	var tmp;
	if(v2 == null) {
		tmp = "null";
	} else {
		var v = v2;
		var tens = v;
		var negative = false;
		if(v <= 0) {
			tens = -v;
			negative = true;
		}
		var b = "";
		var targ = tens;
		var v10 = Math.pow(12,10) | 0;
		var v9 = Math.pow(12,9) | 0;
		var v8 = Math.pow(12,8) | 0;
		var v7 = Math.pow(12,7) | 0;
		var v6 = Math.pow(12,6) | 0;
		var v5 = Math.pow(12,5) | 0;
		var v4 = Math.pow(12,4) | 0;
		var v3 = Math.pow(12,3) | 0;
		var v21 = Math.pow(12,2) | 0;
		var v11 = 12;
		var s = "";
		var o = 0;
		var n = "";
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v10 >= 0) {
				targ -= v10;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v9 >= 0) {
				targ -= v9;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v8 >= 0) {
				targ -= v8;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v7 >= 0) {
				targ -= v7;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v6 >= 0) {
				targ -= v6;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v5 >= 0) {
				targ -= v5;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v4 >= 0) {
				targ -= v4;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v3 >= 0) {
				targ -= v3;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v21 >= 0) {
				targ -= v21;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v11 >= 0) {
				targ -= v11;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - 1 >= 0) {
				--targ;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		var so = "";
		var j = 0;
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			if(s.charAt(i) != "0") {
				j = i;
				break;
			}
		}
		so = HxOverrides.substr(s,j,null);
		b = so;
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		if(negative) {
			out.doudecimal = "-" + b;
		} else {
			out.doudecimal = b;
		}
		out.int = v;
		var dd = out;
		tmp = dd.doudecimal;
	}
	console.log("Test.hx:15:",tmp);
	var v6 = v2;
	console.log("Test.hx:17:",v6);
	var v3 = v2;
	console.log("Test.hx:19:",v3);
	var tmp = v1 + v2;
	var tmp1;
	if(tmp == null) {
		tmp1 = "null";
	} else {
		var v = tmp;
		var tens = v;
		var negative = false;
		if(v <= 0) {
			tens = -v;
			negative = true;
		}
		var b = "";
		var targ = tens;
		var v10 = Math.pow(12,10) | 0;
		var v9 = Math.pow(12,9) | 0;
		var v8 = Math.pow(12,8) | 0;
		var v7 = Math.pow(12,7) | 0;
		var v6 = Math.pow(12,6) | 0;
		var v5 = Math.pow(12,5) | 0;
		var v4 = Math.pow(12,4) | 0;
		var v3 = Math.pow(12,3) | 0;
		var v21 = Math.pow(12,2) | 0;
		var v11 = 12;
		var s = "";
		var o = 0;
		var n = "";
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v10 >= 0) {
				targ -= v10;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v9 >= 0) {
				targ -= v9;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v8 >= 0) {
				targ -= v8;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v7 >= 0) {
				targ -= v7;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v6 >= 0) {
				targ -= v6;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v5 >= 0) {
				targ -= v5;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v4 >= 0) {
				targ -= v4;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v3 >= 0) {
				targ -= v3;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v21 >= 0) {
				targ -= v21;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v11 >= 0) {
				targ -= v11;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - 1 >= 0) {
				--targ;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		var so = "";
		var j = 0;
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			if(s.charAt(i) != "0") {
				j = i;
				break;
			}
		}
		so = HxOverrides.substr(s,j,null);
		b = so;
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		if(negative) {
			out.doudecimal = "-" + b;
		} else {
			out.doudecimal = b;
		}
		out.int = v;
		var dd = out;
		tmp1 = dd.doudecimal;
	}
	console.log("Test.hx:20:",tmp1);
	var v4 = v1 + v2;
	var v5 = v4;
	var v7 = 1584;
	var tmp;
	if(v7 == null) {
		tmp = "null";
	} else {
		var v = v7;
		var tens = v;
		var negative = false;
		if(v <= 0) {
			tens = -v;
			negative = true;
		}
		var b = "";
		var targ = tens;
		var v10 = Math.pow(12,10) | 0;
		var v9 = Math.pow(12,9) | 0;
		var v8 = Math.pow(12,8) | 0;
		var v7 = Math.pow(12,7) | 0;
		var v6 = Math.pow(12,6) | 0;
		var v51 = Math.pow(12,5) | 0;
		var v4 = Math.pow(12,4) | 0;
		var v3 = Math.pow(12,3) | 0;
		var v2 = Math.pow(12,2) | 0;
		var v1 = 12;
		var s = "";
		var o = 0;
		var n = "";
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v10 >= 0) {
				targ -= v10;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v9 >= 0) {
				targ -= v9;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v8 >= 0) {
				targ -= v8;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v7 >= 0) {
				targ -= v7;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v6 >= 0) {
				targ -= v6;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v51 >= 0) {
				targ -= v51;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v4 >= 0) {
				targ -= v4;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v3 >= 0) {
				targ -= v3;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v2 >= 0) {
				targ -= v2;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - v1 >= 0) {
				targ -= v1;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g = 0;
		while(_g < 12) {
			var i = _g++;
			if(targ - 1 >= 0) {
				--targ;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		var so = "";
		var j = 0;
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			if(s.charAt(i) != "0") {
				j = i;
				break;
			}
		}
		so = HxOverrides.substr(s,j,null);
		b = so;
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		if(negative) {
			out.doudecimal = "-" + b;
		} else {
			out.doudecimal = b;
		}
		out.int = v;
		var dd = out;
		tmp = dd.doudecimal;
	}
	console.log("Test.hx:24:","v7 " + tmp);
	console.log("Test.hx:25:",v5);
	var _g = 251658240;
	while(_g < 252706816) {
		var i = _g++;
		var d = i;
		var tmp = i + " = ";
		var v = d;
		var tens = v;
		var negative = false;
		if(v <= 0) {
			tens = -v;
			negative = true;
		}
		var b = "";
		var targ = tens;
		var v10 = Math.pow(12,10) | 0;
		var v9 = Math.pow(12,9) | 0;
		var v8 = Math.pow(12,8) | 0;
		var v7 = Math.pow(12,7) | 0;
		var v6 = Math.pow(12,6) | 0;
		var v5 = Math.pow(12,5) | 0;
		var v4 = Math.pow(12,4) | 0;
		var v3 = Math.pow(12,3) | 0;
		var v2 = Math.pow(12,2) | 0;
		var v1 = 12;
		var s = "";
		var o = 0;
		var n = "";
		o = 0;
		var _g1 = 0;
		while(_g1 < 12) {
			var i1 = _g1++;
			if(targ - v10 >= 0) {
				targ -= v10;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g2 = 0;
		while(_g2 < 12) {
			var i2 = _g2++;
			if(targ - v9 >= 0) {
				targ -= v9;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g3 = 0;
		while(_g3 < 12) {
			var i3 = _g3++;
			if(targ - v8 >= 0) {
				targ -= v8;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g4 = 0;
		while(_g4 < 12) {
			var i4 = _g4++;
			if(targ - v7 >= 0) {
				targ -= v7;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g5 = 0;
		while(_g5 < 12) {
			var i5 = _g5++;
			if(targ - v6 >= 0) {
				targ -= v6;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g6 = 0;
		while(_g6 < 12) {
			var i6 = _g6++;
			if(targ - v5 >= 0) {
				targ -= v5;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g7 = 0;
		while(_g7 < 12) {
			var i7 = _g7++;
			if(targ - v4 >= 0) {
				targ -= v4;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g8 = 0;
		while(_g8 < 12) {
			var i8 = _g8++;
			if(targ - v3 >= 0) {
				targ -= v3;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g9 = 0;
		while(_g9 < 12) {
			var i9 = _g9++;
			if(targ - v2 >= 0) {
				targ -= v2;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g10 = 0;
		while(_g10 < 12) {
			var i10 = _g10++;
			if(targ - v1 >= 0) {
				targ -= v1;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		o = 0;
		var _g11 = 0;
		while(_g11 < 12) {
			var i11 = _g11++;
			if(targ - 1 >= 0) {
				--targ;
				++o;
			} else {
				n = o == 10 ? "A" : o == 11 ? "B" : Std.string(o);
				s += n;
				break;
			}
		}
		var so = "";
		var j = 0;
		var _g12 = 0;
		var _g13 = s.length;
		while(_g12 < _g13) {
			var i12 = _g12++;
			if(s.charAt(i12) != "0") {
				j = i12;
				break;
			}
		}
		so = HxOverrides.substr(s,j,null);
		b = so;
		var out = Object.create(doudecimal_Doudecimal_$.prototype);
		if(negative) {
			out.doudecimal = "-" + b;
		} else {
			out.doudecimal = b;
		}
		out.int = v;
		var dd = out;
		console.log("Test.hx:33:",tmp + dd.doudecimal);
	}
}
var doudecimal_Doudecimal_$ = function(doudecimal) {
	var len = doudecimal.length;
	var b_b = "";
	var no = 0;
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		no = doudecimal.charCodeAt(i);
		switch(no) {
		case 35:
			b_b += "A";
			break;
		case 42:
			b_b += "B";
			break;
		case 45:
			if(i == 0) {
				b_b += "-";
			} else {
				throw haxe_Exception.thrown("invalid Doudecimal");
			}
			break;
		case 48:
			b_b += "0";
			break;
		case 49:
			b_b += "1";
			break;
		case 50:
			b_b += "2";
			break;
		case 51:
			b_b += "3";
			break;
		case 52:
			b_b += "4";
			break;
		case 53:
			b_b += "5";
			break;
		case 54:
			b_b += "6";
			break;
		case 55:
			b_b += "7";
			break;
		case 56:
			b_b += "8";
			break;
		case 57:
			b_b += "9";
			break;
		case 59:
			b_b += ";";
			break;
		case 65:
			b_b += "A";
			break;
		case 66:
			b_b += "B";
			break;
		case 69:
			b_b += "B";
			break;
		case 84:
			b_b += "A";
			break;
		case 88:
			b_b += "A";
			break;
		case 90:
			b_b += "B";
			break;
		case 97:
			b_b += "A";
			break;
		case 98:
			b_b += "B";
			break;
		case 102:
			b_b += "A";
			break;
		case 116:
			b_b += "A";
			break;
		case 122:
			b_b += "B";
			break;
		case 8586:
			b_b += "A";
			break;
		case 8587:
			b_b += "B";
			break;
		default:
			throw haxe_Exception.thrown("invalid Doudecimal");
		}
	}
	this.doudecimal = b_b;
	var len = this.doudecimal.length;
	var n = len - 1;
	var multi;
	var out = 0.;
	var dozit = "";
	var negative = false;
	if(this.doudecimal.charAt(0) == "-") {
		this.doudecimal = HxOverrides.substr(this.doudecimal,1,null);
		len = this.doudecimal.length;
		negative = true;
	}
	var _g = 0;
	var _g1 = len;
	while(_g < _g1) {
		var i = _g++;
		multi = Math.pow(12,n);
		dozit = this.doudecimal.charAt(i);
		var no = dozit == "A" ? 10 : dozit == "B" ? 11 : Std.parseInt(dozit);
		out += multi * no;
		--n;
	}
	this.int = negative ? -(out | 0) : out | 0;
};
doudecimal_Doudecimal_$.__name__ = true;
doudecimal_Doudecimal_$.prototype = {
	toString: function() {
		return this.doudecimal;
	}
};
var haxe_Exception = function(message,previous,native) {
	Error.call(this,message);
	this.message = message;
	this.__previousException = previous;
	this.__nativeException = native != null ? native : this;
};
haxe_Exception.__name__ = true;
haxe_Exception.thrown = function(value) {
	if(((value) instanceof haxe_Exception)) {
		return value.get_native();
	} else if(((value) instanceof Error)) {
		return value;
	} else {
		var e = new haxe_ValueException(value);
		return e;
	}
};
haxe_Exception.__super__ = Error;
haxe_Exception.prototype = $extend(Error.prototype,{
	get_native: function() {
		return this.__nativeException;
	}
});
var haxe_ValueException = function(value,previous,native) {
	haxe_Exception.call(this,String(value),previous,native);
	this.value = value;
};
haxe_ValueException.__name__ = true;
haxe_ValueException.__super__ = haxe_Exception;
haxe_ValueException.prototype = $extend(haxe_Exception.prototype,{
});
var haxe_iterators_ArrayIterator = function(array) {
	this.current = 0;
	this.array = array;
};
haxe_iterators_ArrayIterator.__name__ = true;
haxe_iterators_ArrayIterator.prototype = {
	hasNext: function() {
		return this.current < this.array.length;
	}
	,next: function() {
		return this.array[this.current++];
	}
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g = 0;
			var _g1 = o.length;
			while(_g < _g1) {
				var i = _g++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( _g ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) {
			str += ", \n";
		}
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "string":
		return o;
	default:
		return String(o);
	}
};
if(typeof(performance) != "undefined" ? typeof(performance.now) == "function" : false) {
	HxOverrides.now = performance.now.bind(performance);
}
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.__name__ = true;
Array.__name__ = true;
js_Boot.__toStr = ({ }).toString;
Test_main();
})({});
