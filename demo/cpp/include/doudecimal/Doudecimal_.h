// Generated by Haxe 4.3.0-rc.1+
#ifndef INCLUDED_doudecimal_Doudecimal_
#define INCLUDED_doudecimal_Doudecimal_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(doudecimal,Doudecimal_)

namespace doudecimal{


class HXCPP_CLASS_ATTRIBUTES Doudecimal__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Doudecimal__obj OBJ_;
		Doudecimal__obj();

	public:
		enum { _hx_ClassId = 0x73bdb1f1 };

		void __construct(::String doudecimal);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="doudecimal.Doudecimal_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"doudecimal.Doudecimal_"); }
		static ::hx::ObjectPtr< Doudecimal__obj > __new(::String doudecimal);
		static ::hx::ObjectPtr< Doudecimal__obj > __alloc(::hx::Ctx *_hx_ctx,::String doudecimal);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Doudecimal__obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Doudecimal_",18,bf,1d,16); }

		static ::String fromDigit(int dig);
		static ::Dynamic fromDigit_dyn();

		static int toDigit(::String str);
		static ::Dynamic toDigit_dyn();

		static ::doudecimal::Doudecimal_ fromInt(int decimal);
		static ::Dynamic fromInt_dyn();

		static ::String convert(int targ);
		static ::Dynamic convert_dyn();

		::String doudecimal;
		int _hx_int;
		virtual ::String toString();
		::Dynamic toString_dyn();

		::String checkStr(::String s);
		::Dynamic checkStr_dyn();

		::String toDozenal();
		::Dynamic toDozenal_dyn();

		int toInt();
		::Dynamic toInt_dyn();

};

} // end namespace doudecimal

#endif /* INCLUDED_doudecimal_Doudecimal_ */ 
