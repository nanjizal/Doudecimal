// Generated by Haxe 4.3.0-rc.1+
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED__Test_Test_Fields_
#include <_Test/Test_Fields_.h>
#endif
#ifndef INCLUDED_doudecimal_Doudecimal_
#include <doudecimal/Doudecimal_.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ac00761f25561774_5_main,"_Test.Test_Fields_","main",0x37934dd1,"_Test.Test_Fields_.main","Test.hx",5,0x8afb218c)
namespace _Test{

void Test_Fields__obj::__construct() { }

Dynamic Test_Fields__obj::__CreateEmpty() { return new Test_Fields__obj; }

void *Test_Fields__obj::_hx_vtable = 0;

Dynamic Test_Fields__obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Test_Fields__obj > _hx_result = new Test_Fields__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Test_Fields__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x50a0c7aa;
}

void Test_Fields__obj::main(){
            	HX_GC_STACKFRAME(&_hx_pos_ac00761f25561774_5_main)
HXLINE(   6)		::haxe::Log_obj::trace(HX_("test",52,c8,f9,4c),::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),6,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(   8)		::doudecimal::Doudecimal_ dd = ::doudecimal::Doudecimal__obj::__alloc( HX_CTX ,HX_W(u"2\u218a\u218b",dd73,ff6d));
HXLINE(  10)		::haxe::Log_obj::trace(dd,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),10,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  11)		 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  11)		int len = dd->doudecimal.length;
HXDLIN(  11)		int no;
HXDLIN(  11)		::StringBuf b = ::StringBuf_obj::__alloc( HX_CTX );
HXDLIN(  11)		{
HXLINE(  11)			int _g = 0;
HXDLIN(  11)			int _g1 = len;
HXDLIN(  11)			while((_g < _g1)){
HXLINE(  11)				_g = (_g + 1);
HXDLIN(  11)				int i = (_g - 1);
HXDLIN(  11)				no = dd->doudecimal.cca(i);
HXDLIN(  11)				{
HXLINE(  11)					::String x;
HXDLIN(  11)					switch((int)(no)){
            						case (int)65: {
HXLINE(  11)							x = HX_W(u"\u218a",f2a6,00ab);
            						}
            						break;
            						case (int)66: {
HXLINE(  11)							x = HX_W(u"\u218b",f2a7,00ab);
            						}
            						break;
            						default:{
HXLINE(  11)							x = ::String::fromCharCode(no);
            						}
            					}
HXDLIN(  11)					if (::hx::IsNotNull( b->charBuf )) {
HXLINE(  11)						b->flush();
            					}
HXDLIN(  11)					if (::hx::IsNull( b->b )) {
HXLINE(  11)						b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            					}
            					else {
HXLINE(  11)						::Array< ::String > b1 = b->b;
HXDLIN(  11)						b1->push(::Std_obj::string(x));
            					}
            				}
            			}
            		}
HXDLIN(  11)		::String _hx_tmp1 = b->toString();
HXDLIN(  11)		_hx_tmp(_hx_tmp1,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),11,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  12)		int v1 = -1;
HXLINE(  13)		 ::Dynamic _hx_tmp2 = ::haxe::Log_obj::trace;
HXDLIN(  13)		int v = v1;
HXDLIN(  13)		int tens = v;
HXDLIN(  13)		bool negative = false;
HXDLIN(  13)		if ((v <= 0)) {
HXLINE( 270)			tens = -(v);
HXLINE( 271)			negative = true;
            		}
HXLINE(  13)		::String b1 = HX_("",00,00,00,00);
HXDLIN(  13)		int targ = tens;
HXDLIN(  13)		int v10 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(10) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v10,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),289,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v9 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(9) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v9,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),291,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v8 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(8) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v8,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),293,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v7 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(7) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v7,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),295,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v6 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(6) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v6,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),297,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v5 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(5) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v5,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),299,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v4 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(4) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v4,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),301,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v3 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(3) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v3,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),303,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v2 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(2) )));
HXDLIN(  13)		::haxe::Log_obj::trace(v2,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),305,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		int v11 = 12;
HXDLIN(  13)		::haxe::Log_obj::trace(v11,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),307,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  13)		::String s = HX_("",00,00,00,00);
HXDLIN(  13)		int o = 0;
HXDLIN(  13)		::String n = HX_("",00,00,00,00);
HXLINE( 312)		o = 0;
HXLINE(  13)		int _g2 = 0;
HXDLIN(  13)		while((_g2 < 12)){
HXLINE(  13)			_g2 = (_g2 + 1);
HXDLIN(  13)			int i = (_g2 - 1);
HXDLIN(  13)			if (((targ - v10) >= 0)) {
HXLINE( 315)				targ = (targ - v10);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 319)				s = (s + n);
HXLINE(  13)				goto _hx_goto_1;
            			}
            		}
            		_hx_goto_1:;
HXLINE( 323)		o = 0;
HXLINE(  13)		int _g3 = 0;
HXDLIN(  13)		while((_g3 < 12)){
HXLINE(  13)			_g3 = (_g3 + 1);
HXDLIN(  13)			int i = (_g3 - 1);
HXDLIN(  13)			if (((targ - v9) >= 0)) {
HXLINE( 326)				targ = (targ - v9);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 330)				s = (s + n);
HXLINE(  13)				goto _hx_goto_2;
            			}
            		}
            		_hx_goto_2:;
HXLINE( 334)		o = 0;
HXLINE(  13)		int _g4 = 0;
HXDLIN(  13)		while((_g4 < 12)){
HXLINE(  13)			_g4 = (_g4 + 1);
HXDLIN(  13)			int i = (_g4 - 1);
HXDLIN(  13)			if (((targ - v8) >= 0)) {
HXLINE( 337)				targ = (targ - v8);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 341)				s = (s + n);
HXLINE(  13)				goto _hx_goto_3;
            			}
            		}
            		_hx_goto_3:;
HXLINE( 345)		o = 0;
HXLINE(  13)		int _g5 = 0;
HXDLIN(  13)		while((_g5 < 12)){
HXLINE(  13)			_g5 = (_g5 + 1);
HXDLIN(  13)			int i = (_g5 - 1);
HXDLIN(  13)			if (((targ - v7) >= 0)) {
HXLINE( 348)				targ = (targ - v7);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 352)				s = (s + n);
HXLINE(  13)				goto _hx_goto_4;
            			}
            		}
            		_hx_goto_4:;
HXLINE( 356)		o = 0;
HXLINE(  13)		int _g6 = 0;
HXDLIN(  13)		while((_g6 < 12)){
HXLINE(  13)			_g6 = (_g6 + 1);
HXDLIN(  13)			int i = (_g6 - 1);
HXDLIN(  13)			if (((targ - v6) >= 0)) {
HXLINE( 359)				targ = (targ - v6);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 363)				s = (s + n);
HXLINE(  13)				goto _hx_goto_5;
            			}
            		}
            		_hx_goto_5:;
HXLINE( 367)		o = 0;
HXLINE(  13)		int _g7 = 0;
HXDLIN(  13)		while((_g7 < 12)){
HXLINE(  13)			_g7 = (_g7 + 1);
HXDLIN(  13)			int i = (_g7 - 1);
HXDLIN(  13)			if (((targ - v5) >= 0)) {
HXLINE( 370)				targ = (targ - v5);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 374)				s = (s + n);
HXLINE(  13)				goto _hx_goto_6;
            			}
            		}
            		_hx_goto_6:;
HXLINE( 378)		o = 0;
HXLINE(  13)		int _g8 = 0;
HXDLIN(  13)		while((_g8 < 12)){
HXLINE(  13)			_g8 = (_g8 + 1);
HXDLIN(  13)			int i = (_g8 - 1);
HXDLIN(  13)			if (((targ - v4) >= 0)) {
HXLINE( 381)				targ = (targ - v4);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 385)				s = (s + n);
HXLINE(  13)				goto _hx_goto_7;
            			}
            		}
            		_hx_goto_7:;
HXLINE( 389)		o = 0;
HXLINE(  13)		int _g9 = 0;
HXDLIN(  13)		while((_g9 < 12)){
HXLINE(  13)			_g9 = (_g9 + 1);
HXDLIN(  13)			int i = (_g9 - 1);
HXDLIN(  13)			if (((targ - v3) >= 0)) {
HXLINE( 392)				targ = (targ - v3);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 396)				s = (s + n);
HXLINE(  13)				goto _hx_goto_8;
            			}
            		}
            		_hx_goto_8:;
HXLINE( 400)		o = 0;
HXLINE(  13)		int _g10 = 0;
HXDLIN(  13)		while((_g10 < 12)){
HXLINE(  13)			_g10 = (_g10 + 1);
HXDLIN(  13)			int i = (_g10 - 1);
HXDLIN(  13)			if (((targ - v2) >= 0)) {
HXLINE( 403)				targ = (targ - v2);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 407)				s = (s + n);
HXLINE(  13)				goto _hx_goto_9;
            			}
            		}
            		_hx_goto_9:;
HXLINE( 411)		o = 0;
HXLINE(  13)		int _g11 = 0;
HXDLIN(  13)		while((_g11 < 12)){
HXLINE(  13)			_g11 = (_g11 + 1);
HXDLIN(  13)			int i = (_g11 - 1);
HXDLIN(  13)			if (((targ - v11) >= 0)) {
HXLINE( 414)				targ = (targ - v11);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 418)				s = (s + n);
HXLINE(  13)				goto _hx_goto_10;
            			}
            		}
            		_hx_goto_10:;
HXLINE( 422)		o = 0;
HXLINE(  13)		int _g12 = 0;
HXDLIN(  13)		while((_g12 < 12)){
HXLINE(  13)			_g12 = (_g12 + 1);
HXDLIN(  13)			int i = (_g12 - 1);
HXDLIN(  13)			if (((targ - 1) >= 0)) {
HXLINE( 425)				targ = (targ - 1);
HXLINE(  13)				o = (o + 1);
            			}
            			else {
HXLINE(  13)				if ((o == 10)) {
HXLINE(  13)					n = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  13)					if ((o == 11)) {
HXLINE(  13)						n = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  13)						n = ::Std_obj::string(o);
            					}
            				}
HXLINE( 429)				s = (s + n);
HXLINE(  13)				goto _hx_goto_11;
            			}
            		}
            		_hx_goto_11:;
HXDLIN(  13)		::String so = HX_("",00,00,00,00);
HXDLIN(  13)		int j = 0;
HXDLIN(  13)		int _g13 = 0;
HXDLIN(  13)		int _g14 = s.length;
HXDLIN(  13)		while((_g13 < _g14)){
HXLINE(  13)			_g13 = (_g13 + 1);
HXDLIN(  13)			int i = (_g13 - 1);
HXDLIN(  13)			if ((s.charAt(i) != HX_("0",30,00,00,00))) {
HXLINE( 437)				j = i;
HXLINE(  13)				goto _hx_goto_12;
            			}
            		}
            		_hx_goto_12:;
HXLINE( 441)		so = s.substr(j,null());
HXLINE(  13)		b1 = so;
HXDLIN(  13)		::doudecimal::Doudecimal_ out = ( (::doudecimal::Doudecimal_)(::Type_obj::createEmptyInstance(::hx::ClassOf< ::doudecimal::Doudecimal_ >())) );
HXDLIN(  13)		if (negative) {
HXLINE(  13)			out->doudecimal = (HX_("-",2d,00,00,00) + b1);
            		}
            		else {
HXLINE(  13)			out->doudecimal = b1;
            		}
HXDLIN(  13)		out->_hx_int = v;
HXDLIN(  13)		::doudecimal::Doudecimal_ dd1 = out;
HXDLIN(  13)		_hx_tmp2(dd1->doudecimal,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),13,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  14)		int dd_int;
HXDLIN(  14)		int len1 = HX_("2A4",85,29,26,00).length;
HXDLIN(  14)		::StringBuf b2 = ::StringBuf_obj::__alloc( HX_CTX );
HXDLIN(  14)		int no1 = 0;
HXDLIN(  14)		int _g15 = 0;
HXDLIN(  14)		int _g16 = len1;
HXDLIN(  14)		while((_g15 < _g16)){
HXLINE(  14)			_g15 = (_g15 + 1);
HXDLIN(  14)			int i = (_g15 - 1);
HXLINE( 119)			no1 = HX_("2A4",85,29,26,00).cca(i);
HXLINE(  14)			switch((int)(no1)){
            				case (int)35: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)42: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)45: {
HXLINE(  14)					if ((i == 0)) {
HXLINE(  14)						if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)							b2->flush();
            						}
HXDLIN(  14)						if (::hx::IsNull( b2->b )) {
HXLINE(  14)							b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("-",2d,00,00,00)));
            						}
            						else {
HXLINE(  14)							::Array< ::String > b = b2->b;
HXDLIN(  14)							b->push(::Std_obj::string(HX_("-",2d,00,00,00)));
            						}
            					}
            					else {
HXLINE(  14)						HX_STACK_DO_THROW(HX_("invalid Doudecimal",f0,cd,48,30));
            					}
            				}
            				break;
            				case (int)48: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("0",30,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("0",30,00,00,00)));
            					}
            				}
            				break;
            				case (int)49: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("1",31,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("1",31,00,00,00)));
            					}
            				}
            				break;
            				case (int)50: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("2",32,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("2",32,00,00,00)));
            					}
            				}
            				break;
            				case (int)51: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("3",33,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("3",33,00,00,00)));
            					}
            				}
            				break;
            				case (int)52: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("4",34,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("4",34,00,00,00)));
            					}
            				}
            				break;
            				case (int)53: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("5",35,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("5",35,00,00,00)));
            					}
            				}
            				break;
            				case (int)54: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("6",36,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("6",36,00,00,00)));
            					}
            				}
            				break;
            				case (int)55: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("7",37,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("7",37,00,00,00)));
            					}
            				}
            				break;
            				case (int)56: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("8",38,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("8",38,00,00,00)));
            					}
            				}
            				break;
            				case (int)57: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("9",39,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("9",39,00,00,00)));
            					}
            				}
            				break;
            				case (int)59: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_(";",3b,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_(";",3b,00,00,00)));
            					}
            				}
            				break;
            				case (int)65: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)66: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)69: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)84: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)88: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)90: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)97: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)98: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)102: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)116: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)122: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)8586: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)8587: {
HXLINE(  14)					if (::hx::IsNotNull( b2->charBuf )) {
HXLINE(  14)						b2->flush();
            					}
HXDLIN(  14)					if (::hx::IsNull( b2->b )) {
HXLINE(  14)						b2->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  14)						::Array< ::String > b = b2->b;
HXDLIN(  14)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				default:{
HXLINE(  14)					HX_STACK_DO_THROW(HX_("invalid Doudecimal",f0,cd,48,30));
            				}
            			}
            		}
HXDLIN(  14)		::String dd_doudecimal = b2->toString();
HXDLIN(  14)		int len2 = dd_doudecimal.length;
HXDLIN(  14)		int n1 = (len2 - 1);
HXDLIN(  14)		Float multi;
HXDLIN(  14)		Float out1 = ((Float)0.);
HXDLIN(  14)		::String dozit = HX_("",00,00,00,00);
HXDLIN(  14)		bool negative1 = false;
HXDLIN(  14)		if ((dd_doudecimal.charAt(0) == HX_("-",2d,00,00,00))) {
HXLINE(  14)			dd_doudecimal = dd_doudecimal.substr(1,null());
HXLINE( 454)			len2 = dd_doudecimal.length;
HXLINE( 455)			negative1 = true;
            		}
HXLINE(  14)		int _g17 = 0;
HXDLIN(  14)		int _g18 = len2;
HXDLIN(  14)		while((_g17 < _g18)){
HXLINE(  14)			_g17 = (_g17 + 1);
HXDLIN(  14)			int i = (_g17 - 1);
HXLINE( 458)			multi = ::Math_obj::pow(( (Float)(12) ),( (Float)(n1) ));
HXLINE( 459)			dozit = dd_doudecimal.charAt(i);
HXLINE(  14)			 ::Dynamic no;
HXDLIN(  14)			if ((dozit == HX_("A",41,00,00,00))) {
HXLINE(  14)				no = 10;
            			}
            			else {
HXLINE(  14)				if ((dozit == HX_("B",42,00,00,00))) {
HXLINE(  14)					no = 11;
            				}
            				else {
HXLINE(  14)					no = ::Std_obj::parseInt(dozit);
            				}
            			}
HXLINE( 467)			out1 = (out1 + (multi * ( (Float)(no) )));
HXLINE(  14)			n1 = (n1 - 1);
            		}
HXDLIN(  14)		if (negative1) {
HXLINE(  14)			dd_int = -(::Std_obj::_hx_int(out1));
            		}
            		else {
HXLINE(  14)			dd_int = ::Std_obj::_hx_int(out1);
            		}
HXDLIN(  14)		int v21 = dd_int;
HXLINE(  15)		 ::Dynamic _hx_tmp3 = ::haxe::Log_obj::trace;
HXDLIN(  15)		int v12 = v21;
HXDLIN(  15)		int tens1 = v12;
HXDLIN(  15)		bool negative2 = false;
HXDLIN(  15)		if ((v12 <= 0)) {
HXLINE( 270)			tens1 = -(v12);
HXLINE( 271)			negative2 = true;
            		}
HXLINE(  15)		::String b3 = HX_("",00,00,00,00);
HXDLIN(  15)		int targ1 = tens1;
HXDLIN(  15)		int v101 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(10) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v101,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),289,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v91 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(9) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v91,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),291,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v81 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(8) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v81,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),293,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v71 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(7) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v71,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),295,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v61 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(6) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v61,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),297,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v51 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(5) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v51,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),299,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v41 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(4) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v41,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),301,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v31 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(3) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v31,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),303,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v22 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(2) )));
HXDLIN(  15)		::haxe::Log_obj::trace(v22,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),305,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		int v13 = 12;
HXDLIN(  15)		::haxe::Log_obj::trace(v13,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),307,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  15)		::String s1 = HX_("",00,00,00,00);
HXDLIN(  15)		int o1 = 0;
HXDLIN(  15)		::String n2 = HX_("",00,00,00,00);
HXLINE( 312)		o1 = 0;
HXLINE(  15)		int _g19 = 0;
HXDLIN(  15)		while((_g19 < 12)){
HXLINE(  15)			_g19 = (_g19 + 1);
HXDLIN(  15)			int i = (_g19 - 1);
HXDLIN(  15)			if (((targ1 - v101) >= 0)) {
HXLINE( 315)				targ1 = (targ1 - v101);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 319)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_15;
            			}
            		}
            		_hx_goto_15:;
HXLINE( 323)		o1 = 0;
HXLINE(  15)		int _g20 = 0;
HXDLIN(  15)		while((_g20 < 12)){
HXLINE(  15)			_g20 = (_g20 + 1);
HXDLIN(  15)			int i = (_g20 - 1);
HXDLIN(  15)			if (((targ1 - v91) >= 0)) {
HXLINE( 326)				targ1 = (targ1 - v91);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 330)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_16;
            			}
            		}
            		_hx_goto_16:;
HXLINE( 334)		o1 = 0;
HXLINE(  15)		int _g21 = 0;
HXDLIN(  15)		while((_g21 < 12)){
HXLINE(  15)			_g21 = (_g21 + 1);
HXDLIN(  15)			int i = (_g21 - 1);
HXDLIN(  15)			if (((targ1 - v81) >= 0)) {
HXLINE( 337)				targ1 = (targ1 - v81);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 341)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_17;
            			}
            		}
            		_hx_goto_17:;
HXLINE( 345)		o1 = 0;
HXLINE(  15)		int _g22 = 0;
HXDLIN(  15)		while((_g22 < 12)){
HXLINE(  15)			_g22 = (_g22 + 1);
HXDLIN(  15)			int i = (_g22 - 1);
HXDLIN(  15)			if (((targ1 - v71) >= 0)) {
HXLINE( 348)				targ1 = (targ1 - v71);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 352)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_18;
            			}
            		}
            		_hx_goto_18:;
HXLINE( 356)		o1 = 0;
HXLINE(  15)		int _g23 = 0;
HXDLIN(  15)		while((_g23 < 12)){
HXLINE(  15)			_g23 = (_g23 + 1);
HXDLIN(  15)			int i = (_g23 - 1);
HXDLIN(  15)			if (((targ1 - v61) >= 0)) {
HXLINE( 359)				targ1 = (targ1 - v61);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 363)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_19;
            			}
            		}
            		_hx_goto_19:;
HXLINE( 367)		o1 = 0;
HXLINE(  15)		int _g24 = 0;
HXDLIN(  15)		while((_g24 < 12)){
HXLINE(  15)			_g24 = (_g24 + 1);
HXDLIN(  15)			int i = (_g24 - 1);
HXDLIN(  15)			if (((targ1 - v51) >= 0)) {
HXLINE( 370)				targ1 = (targ1 - v51);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 374)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_20;
            			}
            		}
            		_hx_goto_20:;
HXLINE( 378)		o1 = 0;
HXLINE(  15)		int _g25 = 0;
HXDLIN(  15)		while((_g25 < 12)){
HXLINE(  15)			_g25 = (_g25 + 1);
HXDLIN(  15)			int i = (_g25 - 1);
HXDLIN(  15)			if (((targ1 - v41) >= 0)) {
HXLINE( 381)				targ1 = (targ1 - v41);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 385)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_21;
            			}
            		}
            		_hx_goto_21:;
HXLINE( 389)		o1 = 0;
HXLINE(  15)		int _g26 = 0;
HXDLIN(  15)		while((_g26 < 12)){
HXLINE(  15)			_g26 = (_g26 + 1);
HXDLIN(  15)			int i = (_g26 - 1);
HXDLIN(  15)			if (((targ1 - v31) >= 0)) {
HXLINE( 392)				targ1 = (targ1 - v31);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 396)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_22;
            			}
            		}
            		_hx_goto_22:;
HXLINE( 400)		o1 = 0;
HXLINE(  15)		int _g27 = 0;
HXDLIN(  15)		while((_g27 < 12)){
HXLINE(  15)			_g27 = (_g27 + 1);
HXDLIN(  15)			int i = (_g27 - 1);
HXDLIN(  15)			if (((targ1 - v22) >= 0)) {
HXLINE( 403)				targ1 = (targ1 - v22);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 407)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_23;
            			}
            		}
            		_hx_goto_23:;
HXLINE( 411)		o1 = 0;
HXLINE(  15)		int _g28 = 0;
HXDLIN(  15)		while((_g28 < 12)){
HXLINE(  15)			_g28 = (_g28 + 1);
HXDLIN(  15)			int i = (_g28 - 1);
HXDLIN(  15)			if (((targ1 - v13) >= 0)) {
HXLINE( 414)				targ1 = (targ1 - v13);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 418)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_24;
            			}
            		}
            		_hx_goto_24:;
HXLINE( 422)		o1 = 0;
HXLINE(  15)		int _g29 = 0;
HXDLIN(  15)		while((_g29 < 12)){
HXLINE(  15)			_g29 = (_g29 + 1);
HXDLIN(  15)			int i = (_g29 - 1);
HXDLIN(  15)			if (((targ1 - 1) >= 0)) {
HXLINE( 425)				targ1 = (targ1 - 1);
HXLINE(  15)				o1 = (o1 + 1);
            			}
            			else {
HXLINE(  15)				if ((o1 == 10)) {
HXLINE(  15)					n2 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  15)					if ((o1 == 11)) {
HXLINE(  15)						n2 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  15)						n2 = ::Std_obj::string(o1);
            					}
            				}
HXLINE( 429)				s1 = (s1 + n2);
HXLINE(  15)				goto _hx_goto_25;
            			}
            		}
            		_hx_goto_25:;
HXDLIN(  15)		::String so1 = HX_("",00,00,00,00);
HXDLIN(  15)		int j1 = 0;
HXDLIN(  15)		int _g30 = 0;
HXDLIN(  15)		int _g31 = s1.length;
HXDLIN(  15)		while((_g30 < _g31)){
HXLINE(  15)			_g30 = (_g30 + 1);
HXDLIN(  15)			int i = (_g30 - 1);
HXDLIN(  15)			if ((s1.charAt(i) != HX_("0",30,00,00,00))) {
HXLINE( 437)				j1 = i;
HXLINE(  15)				goto _hx_goto_26;
            			}
            		}
            		_hx_goto_26:;
HXLINE( 441)		so1 = s1.substr(j1,null());
HXLINE(  15)		b3 = so1;
HXDLIN(  15)		::doudecimal::Doudecimal_ out2 = ( (::doudecimal::Doudecimal_)(::Type_obj::createEmptyInstance(::hx::ClassOf< ::doudecimal::Doudecimal_ >())) );
HXDLIN(  15)		if (negative2) {
HXLINE(  15)			out2->doudecimal = (HX_("-",2d,00,00,00) + b3);
            		}
            		else {
HXLINE(  15)			out2->doudecimal = b3;
            		}
HXDLIN(  15)		out2->_hx_int = v12;
HXDLIN(  15)		::doudecimal::Doudecimal_ dd2 = out2;
HXDLIN(  15)		_hx_tmp3(dd2->doudecimal,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),15,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  16)		int v62 = v21;
HXLINE(  17)		::haxe::Log_obj::trace(v62,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),17,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  18)		int v32 = v21;
HXLINE(  19)		::haxe::Log_obj::trace(v32,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),19,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  20)		 ::Dynamic _hx_tmp4 = ::haxe::Log_obj::trace;
HXDLIN(  20)		int v14 = (v1 + v21);
HXDLIN(  20)		int tens2 = v14;
HXDLIN(  20)		bool negative3 = false;
HXDLIN(  20)		if ((v14 <= 0)) {
HXLINE( 270)			tens2 = -(v14);
HXLINE( 271)			negative3 = true;
            		}
HXLINE(  20)		::String b4 = HX_("",00,00,00,00);
HXDLIN(  20)		int targ2 = tens2;
HXDLIN(  20)		int v102 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(10) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v102,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),289,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v92 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(9) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v92,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),291,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v82 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(8) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v82,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),293,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v72 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(7) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v72,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),295,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v63 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(6) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v63,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),297,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v52 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(5) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v52,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),299,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v42 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(4) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v42,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),301,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v33 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(3) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v33,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),303,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v23 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(2) )));
HXDLIN(  20)		::haxe::Log_obj::trace(v23,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),305,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		int v15 = 12;
HXDLIN(  20)		::haxe::Log_obj::trace(v15,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),307,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  20)		::String s2 = HX_("",00,00,00,00);
HXDLIN(  20)		int o2 = 0;
HXDLIN(  20)		::String n3 = HX_("",00,00,00,00);
HXLINE( 312)		o2 = 0;
HXLINE(  20)		int _g32 = 0;
HXDLIN(  20)		while((_g32 < 12)){
HXLINE(  20)			_g32 = (_g32 + 1);
HXDLIN(  20)			int i = (_g32 - 1);
HXDLIN(  20)			if (((targ2 - v102) >= 0)) {
HXLINE( 315)				targ2 = (targ2 - v102);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 319)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_27;
            			}
            		}
            		_hx_goto_27:;
HXLINE( 323)		o2 = 0;
HXLINE(  20)		int _g33 = 0;
HXDLIN(  20)		while((_g33 < 12)){
HXLINE(  20)			_g33 = (_g33 + 1);
HXDLIN(  20)			int i = (_g33 - 1);
HXDLIN(  20)			if (((targ2 - v92) >= 0)) {
HXLINE( 326)				targ2 = (targ2 - v92);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 330)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_28;
            			}
            		}
            		_hx_goto_28:;
HXLINE( 334)		o2 = 0;
HXLINE(  20)		int _g34 = 0;
HXDLIN(  20)		while((_g34 < 12)){
HXLINE(  20)			_g34 = (_g34 + 1);
HXDLIN(  20)			int i = (_g34 - 1);
HXDLIN(  20)			if (((targ2 - v82) >= 0)) {
HXLINE( 337)				targ2 = (targ2 - v82);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 341)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_29;
            			}
            		}
            		_hx_goto_29:;
HXLINE( 345)		o2 = 0;
HXLINE(  20)		int _g35 = 0;
HXDLIN(  20)		while((_g35 < 12)){
HXLINE(  20)			_g35 = (_g35 + 1);
HXDLIN(  20)			int i = (_g35 - 1);
HXDLIN(  20)			if (((targ2 - v72) >= 0)) {
HXLINE( 348)				targ2 = (targ2 - v72);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 352)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_30;
            			}
            		}
            		_hx_goto_30:;
HXLINE( 356)		o2 = 0;
HXLINE(  20)		int _g36 = 0;
HXDLIN(  20)		while((_g36 < 12)){
HXLINE(  20)			_g36 = (_g36 + 1);
HXDLIN(  20)			int i = (_g36 - 1);
HXDLIN(  20)			if (((targ2 - v63) >= 0)) {
HXLINE( 359)				targ2 = (targ2 - v63);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 363)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_31;
            			}
            		}
            		_hx_goto_31:;
HXLINE( 367)		o2 = 0;
HXLINE(  20)		int _g37 = 0;
HXDLIN(  20)		while((_g37 < 12)){
HXLINE(  20)			_g37 = (_g37 + 1);
HXDLIN(  20)			int i = (_g37 - 1);
HXDLIN(  20)			if (((targ2 - v52) >= 0)) {
HXLINE( 370)				targ2 = (targ2 - v52);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 374)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_32;
            			}
            		}
            		_hx_goto_32:;
HXLINE( 378)		o2 = 0;
HXLINE(  20)		int _g38 = 0;
HXDLIN(  20)		while((_g38 < 12)){
HXLINE(  20)			_g38 = (_g38 + 1);
HXDLIN(  20)			int i = (_g38 - 1);
HXDLIN(  20)			if (((targ2 - v42) >= 0)) {
HXLINE( 381)				targ2 = (targ2 - v42);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 385)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_33;
            			}
            		}
            		_hx_goto_33:;
HXLINE( 389)		o2 = 0;
HXLINE(  20)		int _g39 = 0;
HXDLIN(  20)		while((_g39 < 12)){
HXLINE(  20)			_g39 = (_g39 + 1);
HXDLIN(  20)			int i = (_g39 - 1);
HXDLIN(  20)			if (((targ2 - v33) >= 0)) {
HXLINE( 392)				targ2 = (targ2 - v33);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 396)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_34;
            			}
            		}
            		_hx_goto_34:;
HXLINE( 400)		o2 = 0;
HXLINE(  20)		int _g40 = 0;
HXDLIN(  20)		while((_g40 < 12)){
HXLINE(  20)			_g40 = (_g40 + 1);
HXDLIN(  20)			int i = (_g40 - 1);
HXDLIN(  20)			if (((targ2 - v23) >= 0)) {
HXLINE( 403)				targ2 = (targ2 - v23);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 407)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_35;
            			}
            		}
            		_hx_goto_35:;
HXLINE( 411)		o2 = 0;
HXLINE(  20)		int _g41 = 0;
HXDLIN(  20)		while((_g41 < 12)){
HXLINE(  20)			_g41 = (_g41 + 1);
HXDLIN(  20)			int i = (_g41 - 1);
HXDLIN(  20)			if (((targ2 - v15) >= 0)) {
HXLINE( 414)				targ2 = (targ2 - v15);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 418)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_36;
            			}
            		}
            		_hx_goto_36:;
HXLINE( 422)		o2 = 0;
HXLINE(  20)		int _g42 = 0;
HXDLIN(  20)		while((_g42 < 12)){
HXLINE(  20)			_g42 = (_g42 + 1);
HXDLIN(  20)			int i = (_g42 - 1);
HXDLIN(  20)			if (((targ2 - 1) >= 0)) {
HXLINE( 425)				targ2 = (targ2 - 1);
HXLINE(  20)				o2 = (o2 + 1);
            			}
            			else {
HXLINE(  20)				if ((o2 == 10)) {
HXLINE(  20)					n3 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  20)					if ((o2 == 11)) {
HXLINE(  20)						n3 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  20)						n3 = ::Std_obj::string(o2);
            					}
            				}
HXLINE( 429)				s2 = (s2 + n3);
HXLINE(  20)				goto _hx_goto_37;
            			}
            		}
            		_hx_goto_37:;
HXDLIN(  20)		::String so2 = HX_("",00,00,00,00);
HXDLIN(  20)		int j2 = 0;
HXDLIN(  20)		int _g43 = 0;
HXDLIN(  20)		int _g44 = s2.length;
HXDLIN(  20)		while((_g43 < _g44)){
HXLINE(  20)			_g43 = (_g43 + 1);
HXDLIN(  20)			int i = (_g43 - 1);
HXDLIN(  20)			if ((s2.charAt(i) != HX_("0",30,00,00,00))) {
HXLINE( 437)				j2 = i;
HXLINE(  20)				goto _hx_goto_38;
            			}
            		}
            		_hx_goto_38:;
HXLINE( 441)		so2 = s2.substr(j2,null());
HXLINE(  20)		b4 = so2;
HXDLIN(  20)		::doudecimal::Doudecimal_ out3 = ( (::doudecimal::Doudecimal_)(::Type_obj::createEmptyInstance(::hx::ClassOf< ::doudecimal::Doudecimal_ >())) );
HXDLIN(  20)		if (negative3) {
HXLINE(  20)			out3->doudecimal = (HX_("-",2d,00,00,00) + b4);
            		}
            		else {
HXLINE(  20)			out3->doudecimal = b4;
            		}
HXDLIN(  20)		out3->_hx_int = v14;
HXDLIN(  20)		::doudecimal::Doudecimal_ dd3 = out3;
HXDLIN(  20)		_hx_tmp4(dd3->doudecimal,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),20,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  21)		int v43 = (v1 + v21);
HXLINE(  22)		int v53 = v43;
HXLINE(  23)		int v73 = 1584;
HXLINE(  24)		 ::Dynamic _hx_tmp5 = ::haxe::Log_obj::trace;
HXDLIN(  24)		int v16 = v73;
HXDLIN(  24)		int tens3 = v16;
HXDLIN(  24)		bool negative4 = false;
HXDLIN(  24)		if ((v16 <= 0)) {
HXLINE( 270)			tens3 = -(v16);
HXLINE( 271)			negative4 = true;
            		}
HXLINE(  24)		::String b5 = HX_("",00,00,00,00);
HXDLIN(  24)		int targ3 = tens3;
HXDLIN(  24)		int v103 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(10) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v103,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),289,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v93 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(9) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v93,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),291,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v83 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(8) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v83,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),293,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v74 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(7) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v74,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),295,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v64 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(6) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v64,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),297,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v54 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(5) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v54,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),299,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v44 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(4) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v44,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),301,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v34 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(3) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v34,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),303,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v24 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(2) )));
HXDLIN(  24)		::haxe::Log_obj::trace(v24,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),305,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		int v17 = 12;
HXDLIN(  24)		::haxe::Log_obj::trace(v17,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),307,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  24)		::String s3 = HX_("",00,00,00,00);
HXDLIN(  24)		int o3 = 0;
HXDLIN(  24)		::String n4 = HX_("",00,00,00,00);
HXLINE( 312)		o3 = 0;
HXLINE(  24)		int _g45 = 0;
HXDLIN(  24)		while((_g45 < 12)){
HXLINE(  24)			_g45 = (_g45 + 1);
HXDLIN(  24)			int i = (_g45 - 1);
HXDLIN(  24)			if (((targ3 - v103) >= 0)) {
HXLINE( 315)				targ3 = (targ3 - v103);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 319)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_39;
            			}
            		}
            		_hx_goto_39:;
HXLINE( 323)		o3 = 0;
HXLINE(  24)		int _g46 = 0;
HXDLIN(  24)		while((_g46 < 12)){
HXLINE(  24)			_g46 = (_g46 + 1);
HXDLIN(  24)			int i = (_g46 - 1);
HXDLIN(  24)			if (((targ3 - v93) >= 0)) {
HXLINE( 326)				targ3 = (targ3 - v93);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 330)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_40;
            			}
            		}
            		_hx_goto_40:;
HXLINE( 334)		o3 = 0;
HXLINE(  24)		int _g47 = 0;
HXDLIN(  24)		while((_g47 < 12)){
HXLINE(  24)			_g47 = (_g47 + 1);
HXDLIN(  24)			int i = (_g47 - 1);
HXDLIN(  24)			if (((targ3 - v83) >= 0)) {
HXLINE( 337)				targ3 = (targ3 - v83);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 341)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_41;
            			}
            		}
            		_hx_goto_41:;
HXLINE( 345)		o3 = 0;
HXLINE(  24)		int _g48 = 0;
HXDLIN(  24)		while((_g48 < 12)){
HXLINE(  24)			_g48 = (_g48 + 1);
HXDLIN(  24)			int i = (_g48 - 1);
HXDLIN(  24)			if (((targ3 - v74) >= 0)) {
HXLINE( 348)				targ3 = (targ3 - v74);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 352)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_42;
            			}
            		}
            		_hx_goto_42:;
HXLINE( 356)		o3 = 0;
HXLINE(  24)		int _g49 = 0;
HXDLIN(  24)		while((_g49 < 12)){
HXLINE(  24)			_g49 = (_g49 + 1);
HXDLIN(  24)			int i = (_g49 - 1);
HXDLIN(  24)			if (((targ3 - v64) >= 0)) {
HXLINE( 359)				targ3 = (targ3 - v64);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 363)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_43;
            			}
            		}
            		_hx_goto_43:;
HXLINE( 367)		o3 = 0;
HXLINE(  24)		int _g50 = 0;
HXDLIN(  24)		while((_g50 < 12)){
HXLINE(  24)			_g50 = (_g50 + 1);
HXDLIN(  24)			int i = (_g50 - 1);
HXDLIN(  24)			if (((targ3 - v54) >= 0)) {
HXLINE( 370)				targ3 = (targ3 - v54);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 374)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_44;
            			}
            		}
            		_hx_goto_44:;
HXLINE( 378)		o3 = 0;
HXLINE(  24)		int _g51 = 0;
HXDLIN(  24)		while((_g51 < 12)){
HXLINE(  24)			_g51 = (_g51 + 1);
HXDLIN(  24)			int i = (_g51 - 1);
HXDLIN(  24)			if (((targ3 - v44) >= 0)) {
HXLINE( 381)				targ3 = (targ3 - v44);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 385)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_45;
            			}
            		}
            		_hx_goto_45:;
HXLINE( 389)		o3 = 0;
HXLINE(  24)		int _g52 = 0;
HXDLIN(  24)		while((_g52 < 12)){
HXLINE(  24)			_g52 = (_g52 + 1);
HXDLIN(  24)			int i = (_g52 - 1);
HXDLIN(  24)			if (((targ3 - v34) >= 0)) {
HXLINE( 392)				targ3 = (targ3 - v34);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 396)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_46;
            			}
            		}
            		_hx_goto_46:;
HXLINE( 400)		o3 = 0;
HXLINE(  24)		int _g53 = 0;
HXDLIN(  24)		while((_g53 < 12)){
HXLINE(  24)			_g53 = (_g53 + 1);
HXDLIN(  24)			int i = (_g53 - 1);
HXDLIN(  24)			if (((targ3 - v24) >= 0)) {
HXLINE( 403)				targ3 = (targ3 - v24);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 407)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_47;
            			}
            		}
            		_hx_goto_47:;
HXLINE( 411)		o3 = 0;
HXLINE(  24)		int _g54 = 0;
HXDLIN(  24)		while((_g54 < 12)){
HXLINE(  24)			_g54 = (_g54 + 1);
HXDLIN(  24)			int i = (_g54 - 1);
HXDLIN(  24)			if (((targ3 - v17) >= 0)) {
HXLINE( 414)				targ3 = (targ3 - v17);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 418)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_48;
            			}
            		}
            		_hx_goto_48:;
HXLINE( 422)		o3 = 0;
HXLINE(  24)		int _g55 = 0;
HXDLIN(  24)		while((_g55 < 12)){
HXLINE(  24)			_g55 = (_g55 + 1);
HXDLIN(  24)			int i = (_g55 - 1);
HXDLIN(  24)			if (((targ3 - 1) >= 0)) {
HXLINE( 425)				targ3 = (targ3 - 1);
HXLINE(  24)				o3 = (o3 + 1);
            			}
            			else {
HXLINE(  24)				if ((o3 == 10)) {
HXLINE(  24)					n4 = HX_("A",41,00,00,00);
            				}
            				else {
HXLINE(  24)					if ((o3 == 11)) {
HXLINE(  24)						n4 = HX_("B",42,00,00,00);
            					}
            					else {
HXLINE(  24)						n4 = ::Std_obj::string(o3);
            					}
            				}
HXLINE( 429)				s3 = (s3 + n4);
HXLINE(  24)				goto _hx_goto_49;
            			}
            		}
            		_hx_goto_49:;
HXDLIN(  24)		::String so3 = HX_("",00,00,00,00);
HXDLIN(  24)		int j3 = 0;
HXDLIN(  24)		int _g56 = 0;
HXDLIN(  24)		int _g57 = s3.length;
HXDLIN(  24)		while((_g56 < _g57)){
HXLINE(  24)			_g56 = (_g56 + 1);
HXDLIN(  24)			int i = (_g56 - 1);
HXDLIN(  24)			if ((s3.charAt(i) != HX_("0",30,00,00,00))) {
HXLINE( 437)				j3 = i;
HXLINE(  24)				goto _hx_goto_50;
            			}
            		}
            		_hx_goto_50:;
HXLINE( 441)		so3 = s3.substr(j3,null());
HXLINE(  24)		b5 = so3;
HXDLIN(  24)		::doudecimal::Doudecimal_ out4 = ( (::doudecimal::Doudecimal_)(::Type_obj::createEmptyInstance(::hx::ClassOf< ::doudecimal::Doudecimal_ >())) );
HXDLIN(  24)		if (negative4) {
HXLINE(  24)			out4->doudecimal = (HX_("-",2d,00,00,00) + b5);
            		}
            		else {
HXLINE(  24)			out4->doudecimal = b5;
            		}
HXDLIN(  24)		out4->_hx_int = v16;
HXDLIN(  24)		::doudecimal::Doudecimal_ dd4 = out4;
HXDLIN(  24)		_hx_tmp5((HX_("v7 ",ff,b9,59,00) + dd4->doudecimal),::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),24,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  25)		::haxe::Log_obj::trace(v53,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),25,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
HXLINE(  28)		{
HXLINE(  28)			int _g58 = 0;
HXDLIN(  28)			while((_g58 < 1000)){
HXLINE(  28)				_g58 = (_g58 + 1);
HXDLIN(  28)				int i = (_g58 - 1);
HXLINE(  29)				int d = i;
HXLINE(  30)				 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  30)				::String _hx_tmp1 = (i + HX_(" = ",63,7d,18,00));
HXDLIN(  30)				int v = d;
HXDLIN(  30)				int tens = v;
HXDLIN(  30)				bool negative = false;
HXDLIN(  30)				if ((v <= 0)) {
HXLINE( 270)					tens = -(v);
HXLINE( 271)					negative = true;
            				}
HXLINE(  30)				::String b = HX_("",00,00,00,00);
HXDLIN(  30)				int targ = tens;
HXDLIN(  30)				int v10 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(10) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v10,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),289,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v9 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(9) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v9,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),291,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v8 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(8) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v8,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),293,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v7 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(7) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v7,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),295,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v6 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(6) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v6,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),297,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v5 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(5) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v5,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),299,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v4 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(4) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v4,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),301,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v3 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(3) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v3,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),303,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v2 = ::Std_obj::_hx_int(::Math_obj::pow(( (Float)(12) ),( (Float)(2) )));
HXDLIN(  30)				::haxe::Log_obj::trace(v2,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),305,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				int v1 = 12;
HXDLIN(  30)				::haxe::Log_obj::trace(v1,::hx::SourceInfo(HX_("../src/doudecimal/Doudecimal.hx",e9,e7,c0,c6),307,HX_("doudecimal.Doudecimal_",71,f7,01,1c),HX_("convert",f3,fd,c9,1a)));
HXDLIN(  30)				::String s = HX_("",00,00,00,00);
HXDLIN(  30)				int o = 0;
HXDLIN(  30)				::String n = HX_("",00,00,00,00);
HXLINE( 312)				o = 0;
HXLINE(  30)				int _g = 0;
HXDLIN(  30)				while((_g < 12)){
HXLINE(  30)					_g = (_g + 1);
HXDLIN(  30)					int i = (_g - 1);
HXDLIN(  30)					if (((targ - v10) >= 0)) {
HXLINE( 315)						targ = (targ - v10);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 319)						s = (s + n);
HXLINE(  30)						goto _hx_goto_52;
            					}
            				}
            				_hx_goto_52:;
HXLINE( 323)				o = 0;
HXLINE(  30)				int _g1 = 0;
HXDLIN(  30)				while((_g1 < 12)){
HXLINE(  30)					_g1 = (_g1 + 1);
HXDLIN(  30)					int i = (_g1 - 1);
HXDLIN(  30)					if (((targ - v9) >= 0)) {
HXLINE( 326)						targ = (targ - v9);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 330)						s = (s + n);
HXLINE(  30)						goto _hx_goto_53;
            					}
            				}
            				_hx_goto_53:;
HXLINE( 334)				o = 0;
HXLINE(  30)				int _g2 = 0;
HXDLIN(  30)				while((_g2 < 12)){
HXLINE(  30)					_g2 = (_g2 + 1);
HXDLIN(  30)					int i = (_g2 - 1);
HXDLIN(  30)					if (((targ - v8) >= 0)) {
HXLINE( 337)						targ = (targ - v8);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 341)						s = (s + n);
HXLINE(  30)						goto _hx_goto_54;
            					}
            				}
            				_hx_goto_54:;
HXLINE( 345)				o = 0;
HXLINE(  30)				int _g3 = 0;
HXDLIN(  30)				while((_g3 < 12)){
HXLINE(  30)					_g3 = (_g3 + 1);
HXDLIN(  30)					int i = (_g3 - 1);
HXDLIN(  30)					if (((targ - v7) >= 0)) {
HXLINE( 348)						targ = (targ - v7);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 352)						s = (s + n);
HXLINE(  30)						goto _hx_goto_55;
            					}
            				}
            				_hx_goto_55:;
HXLINE( 356)				o = 0;
HXLINE(  30)				int _g4 = 0;
HXDLIN(  30)				while((_g4 < 12)){
HXLINE(  30)					_g4 = (_g4 + 1);
HXDLIN(  30)					int i = (_g4 - 1);
HXDLIN(  30)					if (((targ - v6) >= 0)) {
HXLINE( 359)						targ = (targ - v6);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 363)						s = (s + n);
HXLINE(  30)						goto _hx_goto_56;
            					}
            				}
            				_hx_goto_56:;
HXLINE( 367)				o = 0;
HXLINE(  30)				int _g5 = 0;
HXDLIN(  30)				while((_g5 < 12)){
HXLINE(  30)					_g5 = (_g5 + 1);
HXDLIN(  30)					int i = (_g5 - 1);
HXDLIN(  30)					if (((targ - v5) >= 0)) {
HXLINE( 370)						targ = (targ - v5);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 374)						s = (s + n);
HXLINE(  30)						goto _hx_goto_57;
            					}
            				}
            				_hx_goto_57:;
HXLINE( 378)				o = 0;
HXLINE(  30)				int _g6 = 0;
HXDLIN(  30)				while((_g6 < 12)){
HXLINE(  30)					_g6 = (_g6 + 1);
HXDLIN(  30)					int i = (_g6 - 1);
HXDLIN(  30)					if (((targ - v4) >= 0)) {
HXLINE( 381)						targ = (targ - v4);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 385)						s = (s + n);
HXLINE(  30)						goto _hx_goto_58;
            					}
            				}
            				_hx_goto_58:;
HXLINE( 389)				o = 0;
HXLINE(  30)				int _g7 = 0;
HXDLIN(  30)				while((_g7 < 12)){
HXLINE(  30)					_g7 = (_g7 + 1);
HXDLIN(  30)					int i = (_g7 - 1);
HXDLIN(  30)					if (((targ - v3) >= 0)) {
HXLINE( 392)						targ = (targ - v3);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 396)						s = (s + n);
HXLINE(  30)						goto _hx_goto_59;
            					}
            				}
            				_hx_goto_59:;
HXLINE( 400)				o = 0;
HXLINE(  30)				int _g8 = 0;
HXDLIN(  30)				while((_g8 < 12)){
HXLINE(  30)					_g8 = (_g8 + 1);
HXDLIN(  30)					int i = (_g8 - 1);
HXDLIN(  30)					if (((targ - v2) >= 0)) {
HXLINE( 403)						targ = (targ - v2);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 407)						s = (s + n);
HXLINE(  30)						goto _hx_goto_60;
            					}
            				}
            				_hx_goto_60:;
HXLINE( 411)				o = 0;
HXLINE(  30)				int _g9 = 0;
HXDLIN(  30)				while((_g9 < 12)){
HXLINE(  30)					_g9 = (_g9 + 1);
HXDLIN(  30)					int i = (_g9 - 1);
HXDLIN(  30)					if (((targ - v1) >= 0)) {
HXLINE( 414)						targ = (targ - v1);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 418)						s = (s + n);
HXLINE(  30)						goto _hx_goto_61;
            					}
            				}
            				_hx_goto_61:;
HXLINE( 422)				o = 0;
HXLINE(  30)				int _g10 = 0;
HXDLIN(  30)				while((_g10 < 12)){
HXLINE(  30)					_g10 = (_g10 + 1);
HXDLIN(  30)					int i = (_g10 - 1);
HXDLIN(  30)					if (((targ - 1) >= 0)) {
HXLINE( 425)						targ = (targ - 1);
HXLINE(  30)						o = (o + 1);
            					}
            					else {
HXLINE(  30)						if ((o == 10)) {
HXLINE(  30)							n = HX_("A",41,00,00,00);
            						}
            						else {
HXLINE(  30)							if ((o == 11)) {
HXLINE(  30)								n = HX_("B",42,00,00,00);
            							}
            							else {
HXLINE(  30)								n = ::Std_obj::string(o);
            							}
            						}
HXLINE( 429)						s = (s + n);
HXLINE(  30)						goto _hx_goto_62;
            					}
            				}
            				_hx_goto_62:;
HXDLIN(  30)				::String so = HX_("",00,00,00,00);
HXDLIN(  30)				int j = 0;
HXDLIN(  30)				int _g11 = 0;
HXDLIN(  30)				int _g12 = s.length;
HXDLIN(  30)				while((_g11 < _g12)){
HXLINE(  30)					_g11 = (_g11 + 1);
HXDLIN(  30)					int i = (_g11 - 1);
HXDLIN(  30)					if ((s.charAt(i) != HX_("0",30,00,00,00))) {
HXLINE( 437)						j = i;
HXLINE(  30)						goto _hx_goto_63;
            					}
            				}
            				_hx_goto_63:;
HXLINE( 441)				so = s.substr(j,null());
HXLINE(  30)				b = so;
HXDLIN(  30)				::doudecimal::Doudecimal_ out = ( (::doudecimal::Doudecimal_)(::Type_obj::createEmptyInstance(::hx::ClassOf< ::doudecimal::Doudecimal_ >())) );
HXDLIN(  30)				if (negative) {
HXLINE(  30)					out->doudecimal = (HX_("-",2d,00,00,00) + b);
            				}
            				else {
HXLINE(  30)					out->doudecimal = b;
            				}
HXDLIN(  30)				out->_hx_int = v;
HXDLIN(  30)				::doudecimal::Doudecimal_ dd = out;
HXDLIN(  30)				_hx_tmp((_hx_tmp1 + dd->doudecimal),::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),30,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
            			}
            		}
HXLINE(  32)		int dd_int1;
HXDLIN(  32)		int len3 = HX_("BBBBBBBB",00,87,5c,07).length;
HXDLIN(  32)		::StringBuf b6 = ::StringBuf_obj::__alloc( HX_CTX );
HXDLIN(  32)		int no2 = 0;
HXDLIN(  32)		int _g59 = 0;
HXDLIN(  32)		int _g60 = len3;
HXDLIN(  32)		while((_g59 < _g60)){
HXLINE(  32)			_g59 = (_g59 + 1);
HXDLIN(  32)			int i = (_g59 - 1);
HXLINE( 119)			no2 = HX_("BBBBBBBB",00,87,5c,07).cca(i);
HXLINE(  32)			switch((int)(no2)){
            				case (int)35: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)42: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)45: {
HXLINE(  32)					if ((i == 0)) {
HXLINE(  32)						if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)							b6->flush();
            						}
HXDLIN(  32)						if (::hx::IsNull( b6->b )) {
HXLINE(  32)							b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("-",2d,00,00,00)));
            						}
            						else {
HXLINE(  32)							::Array< ::String > b = b6->b;
HXDLIN(  32)							b->push(::Std_obj::string(HX_("-",2d,00,00,00)));
            						}
            					}
            					else {
HXLINE(  32)						HX_STACK_DO_THROW(HX_("invalid Doudecimal",f0,cd,48,30));
            					}
            				}
            				break;
            				case (int)48: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("0",30,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("0",30,00,00,00)));
            					}
            				}
            				break;
            				case (int)49: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("1",31,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("1",31,00,00,00)));
            					}
            				}
            				break;
            				case (int)50: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("2",32,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("2",32,00,00,00)));
            					}
            				}
            				break;
            				case (int)51: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("3",33,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("3",33,00,00,00)));
            					}
            				}
            				break;
            				case (int)52: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("4",34,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("4",34,00,00,00)));
            					}
            				}
            				break;
            				case (int)53: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("5",35,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("5",35,00,00,00)));
            					}
            				}
            				break;
            				case (int)54: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("6",36,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("6",36,00,00,00)));
            					}
            				}
            				break;
            				case (int)55: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("7",37,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("7",37,00,00,00)));
            					}
            				}
            				break;
            				case (int)56: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("8",38,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("8",38,00,00,00)));
            					}
            				}
            				break;
            				case (int)57: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("9",39,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("9",39,00,00,00)));
            					}
            				}
            				break;
            				case (int)59: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_(";",3b,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_(";",3b,00,00,00)));
            					}
            				}
            				break;
            				case (int)65: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)66: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)69: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)84: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)88: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)90: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)97: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)98: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)102: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)116: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)122: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				case (int)8586: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("A",41,00,00,00)));
            					}
            				}
            				break;
            				case (int)8587: {
HXLINE(  32)					if (::hx::IsNotNull( b6->charBuf )) {
HXLINE(  32)						b6->flush();
            					}
HXDLIN(  32)					if (::hx::IsNull( b6->b )) {
HXLINE(  32)						b6->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            					else {
HXLINE(  32)						::Array< ::String > b = b6->b;
HXDLIN(  32)						b->push(::Std_obj::string(HX_("B",42,00,00,00)));
            					}
            				}
            				break;
            				default:{
HXLINE(  32)					HX_STACK_DO_THROW(HX_("invalid Doudecimal",f0,cd,48,30));
            				}
            			}
            		}
HXDLIN(  32)		::String dd_doudecimal1 = b6->toString();
HXDLIN(  32)		int len4 = dd_doudecimal1.length;
HXDLIN(  32)		int n5 = (len4 - 1);
HXDLIN(  32)		Float multi1;
HXDLIN(  32)		Float out5 = ((Float)0.);
HXDLIN(  32)		::String dozit1 = HX_("",00,00,00,00);
HXDLIN(  32)		bool negative5 = false;
HXDLIN(  32)		if ((dd_doudecimal1.charAt(0) == HX_("-",2d,00,00,00))) {
HXLINE(  32)			dd_doudecimal1 = dd_doudecimal1.substr(1,null());
HXLINE( 454)			len4 = dd_doudecimal1.length;
HXLINE( 455)			negative5 = true;
            		}
HXLINE(  32)		int _g61 = 0;
HXDLIN(  32)		int _g62 = len4;
HXDLIN(  32)		while((_g61 < _g62)){
HXLINE(  32)			_g61 = (_g61 + 1);
HXDLIN(  32)			int i = (_g61 - 1);
HXLINE( 458)			multi1 = ::Math_obj::pow(( (Float)(12) ),( (Float)(n5) ));
HXLINE( 459)			dozit1 = dd_doudecimal1.charAt(i);
HXLINE(  32)			 ::Dynamic no;
HXDLIN(  32)			if ((dozit1 == HX_("A",41,00,00,00))) {
HXLINE(  32)				no = 10;
            			}
            			else {
HXLINE(  32)				if ((dozit1 == HX_("B",42,00,00,00))) {
HXLINE(  32)					no = 11;
            				}
            				else {
HXLINE(  32)					no = ::Std_obj::parseInt(dozit1);
            				}
            			}
HXLINE( 467)			out5 = (out5 + (multi1 * ( (Float)(no) )));
HXLINE(  32)			n5 = (n5 - 1);
            		}
HXDLIN(  32)		if (negative5) {
HXLINE(  32)			dd_int1 = -(::Std_obj::_hx_int(out5));
            		}
            		else {
HXLINE(  32)			dd_int1 = ::Std_obj::_hx_int(out5);
            		}
HXLINE(  33)		int len5 = dd_doudecimal1.length;
HXDLIN(  33)		int n6 = (len5 - 1);
HXDLIN(  33)		Float multi2;
HXDLIN(  33)		Float out6 = ((Float)0.);
HXDLIN(  33)		::String dozit2 = HX_("",00,00,00,00);
HXDLIN(  33)		bool negative6 = false;
HXDLIN(  33)		if ((dd_doudecimal1.charAt(0) == HX_("-",2d,00,00,00))) {
HXLINE(  33)			dd_doudecimal1 = dd_doudecimal1.substr(1,null());
HXLINE( 454)			len5 = dd_doudecimal1.length;
HXLINE( 455)			negative6 = true;
            		}
HXLINE(  33)		{
HXLINE(  33)			int _g63 = 0;
HXDLIN(  33)			int _g64 = len5;
HXDLIN(  33)			while((_g63 < _g64)){
HXLINE(  33)				_g63 = (_g63 + 1);
HXDLIN(  33)				int i = (_g63 - 1);
HXLINE( 458)				multi2 = ::Math_obj::pow(( (Float)(12) ),( (Float)(n6) ));
HXLINE( 459)				dozit2 = dd_doudecimal1.charAt(i);
HXLINE(  33)				 ::Dynamic no;
HXDLIN(  33)				if ((dozit2 == HX_("A",41,00,00,00))) {
HXLINE(  33)					no = 10;
            				}
            				else {
HXLINE(  33)					if ((dozit2 == HX_("B",42,00,00,00))) {
HXLINE(  33)						no = 11;
            					}
            					else {
HXLINE(  33)						no = ::Std_obj::parseInt(dozit2);
            					}
            				}
HXLINE( 467)				out6 = (out6 + (multi2 * ( (Float)(no) )));
HXLINE(  33)				n6 = (n6 - 1);
            			}
            		}
HXDLIN(  33)		int v84;
HXDLIN(  33)		if (negative6) {
HXLINE(  33)			v84 = -(::Std_obj::_hx_int(out6));
            		}
            		else {
HXLINE(  33)			v84 = ::Std_obj::_hx_int(out6);
            		}
HXDLIN(  33)		::String v85 = ::StringTools_obj::hex(v84,8);
HXLINE(  34)		::haxe::Log_obj::trace(v85,::hx::SourceInfo(HX_("Test.hx",8c,21,fb,8a),34,HX_("_Test.Test_Fields_",d6,31,df,71),HX_("main",39,38,56,48)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Test_Fields__obj,main,(void))


Test_Fields__obj::Test_Fields__obj()
{
}

bool Test_Fields__obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *Test_Fields__obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *Test_Fields__obj_sStaticStorageInfo = 0;
#endif

::hx::Class Test_Fields__obj::__mClass;

static ::String Test_Fields__obj_sStaticFields[] = {
	HX_("main",39,38,56,48),
	::String(null())
};

void Test_Fields__obj::__register()
{
	Test_Fields__obj _hx_dummy;
	Test_Fields__obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("_Test.Test_Fields_",d6,31,df,71);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Test_Fields__obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Test_Fields__obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< Test_Fields__obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Test_Fields__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Test_Fields__obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace _Test
